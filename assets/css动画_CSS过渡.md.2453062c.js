import{_ as a,c as n,o as e,N as s,x as o}from"./chunks/framework.8361052b.js";const l="/CSS/assets/ease.115c5848.png",t="/CSS/assets/ease-in.6c650b85.png",i="/CSS/assets/ease-out.228b449f.png",c="/CSS/assets/ease-in-out.c077b6c4.png",p="/CSS/assets/BesselFn.989b05e5.png",r="/CSS/assets/Besselcurve.6ad01006.gif",f=JSON.parse('{"title":"CSS动画","description":"","frontmatter":{},"headers":[],"relativePath":"css动画/CSS过渡.md"}'),d={name:"css动画/CSS过渡.md"},u=s(`<h1 id="css动画" tabindex="-1">CSS动画 <a class="header-anchor" href="#css动画" aria-label="Permalink to &quot;CSS动画&quot;">​</a></h1><h2 id="css3过渡-重点" tabindex="-1">CSS3过渡(重点) <a class="header-anchor" href="#css3过渡-重点" aria-label="Permalink to &quot;CSS3过渡(重点)&quot;">​</a></h2><blockquote><p><code>transition</code>属性是一个缩写属性,他是<code>transition-duration</code>,<code>transition-delay</code>,<code>transition-property</code>,<code>transition-timing-function</code>属性的缩写</p></blockquote><ul><li>使用transition属性可以实现元素A状态到B状态的过渡效果,经常使用<code>:hover</code>伪类或者<code>:active</code>伪类触发</li></ul><h3 id="transition-duration" tabindex="-1">transition-duration <a class="header-anchor" href="#transition-duration" aria-label="Permalink to &quot;transition-duration&quot;">​</a></h3><blockquote><p>transition-duration表示过渡时间,他的值可以是0,但是不能是负值</p></blockquote><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">transition: 1s 0.5s;</span></span>
<span class="line"></span></code></pre></div><ul><li>第一个时间1s表示过渡时间,第二个时间表示延时时间(transition-delay).此时不能调换</li><li>如果延时时间是负数可以调换</li></ul><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">transition: 1s -1s;</span></span>
<span class="line"><span style="color:#A6ACCD;">transition: -1s 1s;</span></span>
<span class="line"></span></code></pre></div><h3 id="transition-delay" tabindex="-1">transition-delay <a class="header-anchor" href="#transition-delay" aria-label="Permalink to &quot;transition-delay&quot;">​</a></h3><blockquote><p>transition-delay用来延时过渡效果执行的时间,单位是s或者ms,可以是负值</p></blockquote><ul><li>如果transition-delay是负值,会使部分动画省略(为负数的时候过渡的动作会从该时间点开始显示)</li><li>如果是正数会延迟到该时间点执行</li></ul>`,12),y=o("iframe",{height:"300",style:{width:"100%"},scrolling:"no",title:"Untitled",src:"https://codepen.io/jack-zhang-1314/embed/QWawmKq?default-tab=html%2Cresult",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"},`
  See the Pen <a href="https://codepen.io/jack-zhang-1314/pen/QWawmKq">
  Untitled</a> by Jack-Zhang-1314 (<a href="https://codepen.io/jack-zhang-1314">@jack-zhang-1314</a>)
  on <a href="https://codepen.io">CodePen</a>.
`,-1),C=s(`<ul><li>元素的位移会从靠近50px的时候开始,且过渡效果执行的时间</li></ul><h3 id="transition-property" tabindex="-1">transition-property <a class="header-anchor" href="#transition-property" aria-label="Permalink to &quot;transition-property&quot;">​</a></h3><blockquote><p>transition-property属性设置应用的CSS属性,初始值是all,表示所有的css属性都应用过渡效果</p></blockquote><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">/* 这个all完全多余 */</span></span>
<span class="line"><span style="color:#FFCB6B;">transition-property</span><span style="color:#A6ACCD;">:all 0.2s;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/* 去掉all */</span></span>
<span class="line"><span style="color:#FFCB6B;">transition-property</span><span style="color:#A6ACCD;">:0.2s;</span></span>
<span class="line"></span></code></pre></div><ul><li><p><span style="color:red;">不过并不是所有的css属性都支持过渡效果</span>.例如display就不会不会支持过渡</p></li><li><p>如果希望元素有过渡效果,同时被隐藏,使用<code>visibility</code></p></li><li><p>如果同时使用多个参与过渡效果的css属性,使用逗号<code>,</code>分割</p></li><li><p>但是如果属性值列表长度不同时,有缺则补,多的则除</p></li></ul><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">transition-property</span><span style="color:#A6ACCD;">:opacity</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">left</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">right;</span></span>
<span class="line"><span style="color:#FFCB6B;">transition-duration</span><span style="color:#A6ACCD;">:3s</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">5s;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/* 等同于 */</span></span>
<span class="line"><span style="color:#FFCB6B;">transition-duration</span><span style="color:#A6ACCD;">:3s</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">5s</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">3s;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">transition-property</span><span style="color:#A6ACCD;">:opacity</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">left</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">right;</span></span>
<span class="line"><span style="color:#FFCB6B;">transition-duration</span><span style="color:#A6ACCD;">:3s</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">5s</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">3s</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">5s;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/* 等同于 */</span></span>
<span class="line"><span style="color:#FFCB6B;">transition-duration</span><span style="color:#A6ACCD;">:3s</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">5s</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">3s;</span></span>
<span class="line"></span></code></pre></div><ul><li>transition简写属性也支持,分割</li></ul><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">transition:opacity 5s</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">transform 3s;</span></span>
<span class="line"></span></code></pre></div><h3 id="transition-timing-function" tabindex="-1">transition-timing-function <a class="header-anchor" href="#transition-timing-function" aria-label="Permalink to &quot;transition-timing-function&quot;">​</a></h3><ol><li>线性运动类型:使用<code>linear</code>表示</li><li>三次贝塞尔时间函数类型:<code>ease</code>,<code>ease-in</code>,<code>ease-out</code>,<code>ease-in-out</code>等关键字和<code>cubic-bezier()</code>函数</li><li>步进时间函数类型:<code>step-start</code>,<code>step-start</code>等关键字和<code>steps()</code>函数</li></ol><h4 id="贝塞尔函数" tabindex="-1">贝塞尔函数 <a class="header-anchor" href="#贝塞尔函数" aria-label="Permalink to &quot;贝塞尔函数&quot;">​</a></h4><ul><li><p>ease:等同于<code>cubic-bezier(0.25, 0.1, 0.25, 1.0)</code>,默认值,表示过渡的时候先加速再减速</p><ul><li>横坐标是时间,纵坐标是进程,曲线越陡速率越快,曲线越缓速率越慢</li><li><img src="`+l+'" alt="ease"></li></ul></li><li><p><code>ease-in</code>:等同于<code>cubic-bezier(0.42, 0, 1.0, 1.0)</code>,表示过渡速度刚开始慢,然后过渡速度逐渐加快</p><ul><li><img src="'+t+'" alt="ease-in"></li></ul></li><li><p><code>ease-out</code>:等同于<code>cubic-bezier(0, 0, 0.58, 1.0)</code>,表 示过渡刚开始速度快,然后速度逐渐变慢</p><ul><li><img src="'+i+'" alt="ease-out"></li></ul></li><li><p><code>ease-in-out</code>:等同于<code>cubic-bezier(0.42, 0, 0.58, 1.0)</code>,表示过渡刚开始速度慢,然后速度逐渐加快,最后再变 慢</p><ul><li><img src="'+c+`" alt="ease-in-out"></li></ul></li></ul><blockquote><p>贝塞尔函数</p></blockquote><ul><li><p>线性贝塞尔曲线,二次方贝塞尔曲 线,三次方贝塞尔曲线,四次方贝塞尔曲线,五次方贝塞尔曲线</p></li><li><p>贝塞尔函数的首位是固定的:分别是<code>(0,0)</code>,<code>(1,1)</code></p></li></ul><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">cubic-bezier(x1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> y1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> x2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> y2)</span></span>
<span class="line"></span></code></pre></div><ul><li>例如ease关键字对应的贝塞尔曲线函数<code>cubic-bezier(0.25, 0.1, 0.25, 1.0)</code>的曲线图就是根据(0.25, 0.1)和(0.25, 1.0)这两个控制点坐标生成的 <img src="`+p+'" alt="贝塞尔函数"></li></ul><blockquote><p>贝塞尔曲线有二阶三阶四阶等:他的曲线就是第一个点跑到最后一个点的运动轨迹</p></blockquote><ul><li>五阶贝塞尔函数</li></ul><p><img src="'+r+'" alt="贝塞尔曲线"></p><h3 id="transition与visibility属性" tabindex="-1">transition与visibility属性 <a class="header-anchor" href="#transition与visibility属性" aria-label="Permalink to &quot;transition与visibility属性&quot;">​</a></h3><blockquote><p>由于visibility属性是支持CSS过渡效果和CSS动画效果的,更适合控制隐藏和显示的效果</p></blockquote><ol><li>opacity属性可以实现淡入淡出,但是opacity:0仅仅是在视觉上让浮层元素不可见,浮层元素依然覆盖在页面上,影响 正常的交互,因此,需要使用其他方法来真正隐藏浮层元素</li><li>display:none不支持过渡效果,因此只能使用 <code>visibility:hidden</code>声明来实现</li></ol><ul><li>css支持动画效果的属性:<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_animated_properties" target="_blank" rel="noreferrer">https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_animated_properties</a></li></ul>',23),h=[u,y,C];function b(A,D,_,m,g,S){return e(),n("div",null,h)}const k=a(d,[["render",b]]);export{f as __pageData,k as default};
