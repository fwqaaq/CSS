import{_ as a,c as o,o as n,N as s,x as l}from"./chunks/framework.8361052b.js";const g=JSON.parse('{"title":"流的破坏与保护","description":"","frontmatter":{},"headers":[],"relativePath":"css/流的破坏与保护.md"}'),p={name:"css/流的破坏与保护.md"},e=s(`<h1 id="流的破坏与保护" tabindex="-1">流的破坏与保护 <a class="header-anchor" href="#流的破坏与保护" aria-label="Permalink to &quot;流的破坏与保护&quot;">​</a></h1><h2 id="浮动-float" tabindex="-1">浮动(float) <a class="header-anchor" href="#浮动-float" aria-label="Permalink to &quot;浮动(float)&quot;">​</a></h2><h3 id="浮动特性" tabindex="-1">浮动特性 <a class="header-anchor" href="#浮动特性" aria-label="Permalink to &quot;浮动特性&quot;">​</a></h3><blockquote><p>float的实现是为了实现文字环绕效果</p></blockquote><table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>none</td><td>元素不浮动(默认值)</td></tr><tr><td>left</td><td>元素向左浮动</td></tr><tr><td>right</td><td>元素向右浮动</td></tr></tbody></table><ul><li>浮动特性: <ol><li><p><span style="color:red;">浮动元素会破坏文档流</span>:浮动的盒子<span style="color:red;">不再保留原先的位置</span></p></li><li><p>块状格式化上下文:元素一旦float的属性值不为none,则其display计算值就是block或者table</p><table><thead><tr><th>设定值</th><th>计算值</th></tr></thead><tbody><tr><td>inline</td><td>block</td></tr><tr><td>inline-block</td><td>block</td></tr><tr><td>inine-table</td><td>table</td></tr><tr><td>table-(与table有关的)</td><td>block</td></tr></tbody></table></li><li><p>没有任何margin合并</p></li><li><p>包裹性:包裹由<strong>包裹</strong>和<strong>自适应</strong>两部分组成</p><ul><li><p>如果父元素的宽度是200px.<strong>浮动元素</strong>子元素是一个宽度128px的img.则此时的浮动元素的宽度是包裹.里面的图片宽度是128px</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">father</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">width</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">200px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">float</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">float</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">left</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">float</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">img</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">width</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">128px</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">father</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">float</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">img</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1.img</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div></li><li><p>如果浮动元素的子元素不只是一张128px的图片.还有许多文字.则此时的浮动元素的宽度自适应父元素 的200px的宽度.最终的宽度表现为200px</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">father</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">float</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">img</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1.img</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">怎么会和以前学的不一样,真的是太奇怪了</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div></li></ul></li></ol></li></ul><h3 id="浮动的机制" tabindex="-1">浮动的机制 <a class="header-anchor" href="#浮动的机制" aria-label="Permalink to &quot;浮动的机制&quot;">​</a></h3><blockquote><p>浮动元素会让父元素的高度塌陷,因为浮动原来的作用机制就是为了文字环绕效果</p></blockquote><ul><li><p>浮动锚点:float元素所在的流中的一个点,这个点本身不是浮动的.就表现而言,更像一个没有margin,border,padding的空的内联元素</p></li><li><p>浮动参考:指浮动元素对齐参考的实体</p></li><li><p>float元素的浮动参考是<strong>行宽盒子</strong>(例如文字,span等),也就是float元素在当前<strong>行宽盒子</strong>定位.(因为float仅仅是为了文字环绕兄啊过)</p></li></ul><h3 id="清除浮动" tabindex="-1">清除浮动 <a class="header-anchor" href="#清除浮动" aria-label="Permalink to &quot;清除浮动&quot;">​</a></h3><blockquote><ul><li>父级盒子很多情况下,不方便给高度,但是子盒子浮动又不占有位置,最后父级盒子高度为0时,就会影响下面的白标准流盒子</li><li>由于浮动的元素不再占有原文档的位置,所以他会对后面的元素排版产生影响</li></ul></blockquote><ol><li>清楚浮动的本质:清楚浮动造成的影响</li><li>如果父盒子本身有高度,则不需要清楚浮动</li><li><span style="color:red;">清楚浮动之后,父级就会根据浮动的子盒子自动检测高度.父级有了高度,就不会影响下面的标准流</span></li></ol><ul><li><code>clear:属性值;</code></li></ul><table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>left</td><td>不允许左侧有浮动元素(清楚左侧浮动的影响)</td></tr><tr><td>right</td><td>不允许右侧有浮动元素(清楚右侧浮动的影响)</td></tr><tr><td>both</td><td>同时清楚左右两侧浮动的影响(通常用)</td></tr></tbody></table><ul><li>清楚浮动的方法</li></ul><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">clearfix</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">style</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">float:right</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">你好</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">style</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">float:right</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">不错</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">three</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">style</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">float:right</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">真的</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"></span></code></pre></div><ol><li><p>额外标签法(隔墙法):<span style="color:red;">缺点:结构化比较差</span></p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">three</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">clear</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">both</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div></li><li><p>父级添加overflow属性<span style="color:red;">缺点:无法显示溢出部分</span></p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">clearfix</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">overflow</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">hidden</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><ol><li><p>父级添加after伪元素<span style="color:red;">优点:没有增加标签,结构简单</span></p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">clearfix</span><span style="color:#89DDFF;">::</span><span style="color:#C792EA;">after</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">content</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">clear</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">both</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">height</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">visibility</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">hidden</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div></li><li><p>父级添加双伪元素<span style="color:red;">代码更简洁</span></p></li></ol><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">clearfix</span><span style="color:#89DDFF;">::</span><span style="color:#C792EA;">before</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">clearfix</span><span style="color:#89DDFF;">::</span><span style="color:#C792EA;">after</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#B2CCD6;">content</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">table</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">clearfix</span><span style="color:#89DDFF;">::</span><span style="color:#C792EA;">after</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#B2CCD6;">clear</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">both</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div></li></ol><h3 id="bfc" tabindex="-1">BFC <a class="header-anchor" href="#bfc" aria-label="Permalink to &quot;BFC&quot;">​</a></h3><ol><li><code>float:left</code>.浮动元素本身BFC化,然而浮动元素有破坏性和包裹性,失去了元素本身的流体自适应,无法用来实现自动填满容器的自适应布局</li><li><code>position:absoulte</code>.脱离文档流严重</li><li><code>overflow:hidden</code>,常用的BFC布局属性</li><li><code>display:inline-block</code>,会让元素尺寸的包裹收缩,完全就不是我们想要的block水平流动特性</li></ol><blockquote><p>如果想彻底清除浮动的影响,最适合的属性不是clear而是overflow</p></blockquote><ul><li>设置<code>overflow:hidden</code>声明的元素,假设同时存在border和padding属性.那么overflow裁剪的边界是border box内边缘</li><li>overflow属性是<code>overflow-x</code>和<code>overflow-y</code>的缩写.支持的属性都是一模一样 <ul><li><code>visible</code>:默认值</li><li><code>hidden</code>:裁剪</li><li><code>scroll</code>:滚动条区域一直存在</li><li><code>auto</code>:不足以滚动时没有滚动条,可以滚动时滚动条出现</li></ul></li><li>注意:除非<code>overflow-x</code>和<code>overflow-y</code>两个属性的值都是<code>visible</code>,否则<code>visible</code>都会被当作auto解析</li></ul><blockquote><p>html中有两个标签默认产生滚动条,一个是根元素&lt;html&gt;,另一个是文本域&lt;textarea&gt;.因为这两个值overflow默认值是auto</p></blockquote><ol><li>pc端的浏览器的默认滚动条觉均来自&lt;html&gt;而不是&lt;body&gt;标签 <ul><li>可以使用<code>html{overflow:hidden;}</code>去除页面的滚动条</li></ul></li><li>滚动条会占用容器的可用宽度和高度</li><li>滚动条是可以自定义的 <ul><li><code>::-webkit-scrollbar</code>:整体部分</li><li><code>::-webkit-scrollbar-button</code>:两端按钮</li><li><code>::-webkit-scrollbar-track</code>:外层轨道</li><li><code>::-webkit-scrollbar-track-piece</code>:内层轨道</li><li><code>::-webkit-scrollbar-thumb</code>:滚动滑块</li><li><code>::-webkit-scrollbar-corner</code>:边角</li></ul></li></ol><ul><li>一般只用以下三个属性</li></ul><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">::</span><span style="color:#C792EA;">-webkit-scrollbar</span><span style="color:#89DDFF;">{</span><span style="color:#676E95;font-style:italic;">/* 血槽宽度 */</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">width</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">8px</span><span style="color:#89DDFF;">;</span><span style="color:#B2CCD6;">height</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">8px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">::</span><span style="color:#C792EA;">-webkit-scrollbar-thumb</span><span style="color:#89DDFF;">{</span><span style="color:#676E95;font-style:italic;">/* 拖动条 */</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">background-color</span><span style="color:#89DDFF;">:</span><span style="color:#82AAFF;">rgba</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">0.3</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">border-radius</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">6px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">::</span><span style="color:#C792EA;">-webkit-scrollbar-track</span><span style="color:#89DDFF;">{</span><span style="color:#676E95;font-style:italic;">/* 背景槽 */</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">background-color</span><span style="color:#89DDFF;">:#</span><span style="color:#A6ACCD;">ddd</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">border-radius</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">6px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="定位的意义" tabindex="-1">定位的意义 <a class="header-anchor" href="#定位的意义" aria-label="Permalink to &quot;定位的意义&quot;">​</a></h2><blockquote><ol><li>浮动可以让多个块级盒子一行没有缝隙排列显示,经常用于横向排列盒子</li><li>定位则是可以让盒子自由的在某个盒子内移动位置或者固定在屏幕中某个位置,并且可以压住其他盒子</li></ol></blockquote><h2 id="定位的组成" tabindex="-1">定位的组成 <a class="header-anchor" href="#定位的组成" aria-label="Permalink to &quot;定位的组成&quot;">​</a></h2><blockquote><ul><li>定位:将盒子定在某一个位置,所以定位也是摆放盒子,按照定位的方式移动盒子.<span style="color:red;">定位=定位模式+边偏移</span></li><li>定时模式用于指定元素在文档中的定位方式.边偏移则决定了该元素的最终位置</li></ul></blockquote><ol><li><p>定位模式:通过css的<code>position</code>属性来设定</p><table><thead><tr><th>值</th><th>语义</th></tr></thead><tbody><tr><td>static</td><td>静态定位</td></tr><tr><td>relative</td><td>相对定位</td></tr><tr><td>absolute</td><td>绝对定位</td></tr><tr><td>fixed</td><td>固定定位</td></tr></tbody></table></li><li><p>边偏移:top,bottom,left,right 4个值(相对于父元素而言)</p></li></ol><h3 id="静态定位" tabindex="-1">静态定位 <a class="header-anchor" href="#静态定位" aria-label="Permalink to &quot;静态定位&quot;">​</a></h3><ul><li>按照标准流特性摆放,没有边偏移</li></ul><h3 id="相对定位relative" tabindex="-1">相对定位relative <a class="header-anchor" href="#相对定位relative" aria-label="Permalink to &quot;相对定位relative&quot;">​</a></h3><ul><li>相对定位是元素移动的时候,相对于原来的位置来说<code>position:relative;</code></li><li>特点: <ol><li>left/top/right/bottom是显贵与包块块计算.并且相对于子级原来的位置移动的(<span style="color:red;">移动位置的时候参照点是自己原来的位置</span>)</li><li>原来在标准流的位置继续占有,后面的盒子任然以标准流的方式对待它(<span style="color:red;">不脱标,继续保留原来的位置</span>)</li></ol></li><li>尽量不使用<code>relative</code>,如果想定位某些元素,尽量使用<strong>无依赖的绝对定位</strong><ul><li>一个元素设置成相对定位之后,其实他的层级(z-index)变高了,创建了新的层级上下文</li></ul></li></ul><h3 id="绝对定位absolute" tabindex="-1">绝对定位absolute <a class="header-anchor" href="#绝对定位absolute" aria-label="Permalink to &quot;绝对定位absolute&quot;">​</a></h3><blockquote><p>absolute与float一样都兼具<strong>块状化</strong>,<strong>包裹性</strong>以及<strong>破坏性</strong>等.</p></blockquote><ul><li><p><strong>块状化</strong>.元素一旦position属性值为<code>absolute</code>或者<code>fixed</code>,其display的计算值就是<code>block</code>或者<code>table</code>.</p><ul><li>例如&lt;span&gt;元素的默认值是<code>inline</code>水平,但是一旦设置<code>absolute</code>.display计算值就会变为<code>block</code></li><li><strong>破坏性</strong>:absolute会破坏正常流来实现自己的特性表现,但是本身还是会受普通的流体元素的影响</li><li>以及格式化上下文(BFC)</li><li>并且都有包裹性以及吹村收缩包裹性,同时具有自适应性</li></ul></li><li><p>绝对定位是在元素移动位置的时候,相对于它祖先元素来说的<code>position:absoulte;</code></p></li><li><p>特点:</p><ol><li>如果没有祖先元素或者祖先元素没有定位,以浏览器定位为准(Document文档)</li><li>如果祖先元素有定位(相对,绝对,固定),则以最近一级的有定位祖先元素为参考点移动位置</li><li>绝对定位<span style="color:red;">不再占有原来的位置</span>(脱离标准流)</li></ol></li></ul><blockquote><p>包含块:用来计算和定位的一个框.例如<code>width:50%</code>也就是元素宽度的一半,这里的元素就是指的<code>包含块</code></p></blockquote><ol><li>根元素(<code>初始包含块</code>),尺寸等同于浏览器视窗大小</li><li>如果元素的position为<code>relative</code>或者<code>static</code>,则包含块有最近的块容器祖先盒的content box边界形成</li><li>如果元素<code>position:fixed</code>,则包含块是初始包含快</li><li>如果元素<code>position:absolute</code>,则包含快由最近的不为<code>static</code>的祖先元素建立 <ul><li>如果包含快是纯<code>inline</code>元素 <ul><li>假设给内联元素的前后各生成一个宽度为0的内联盒子,则这两个内联盒子的<code>padding box</code>外面的包围盒就是内联元素的包含块</li><li>当内联元素被跨行分割,包含块则由浏览器自行发挥(由于规范未定义)</li></ul></li><li>如果不是上述情况,则由祖先的<code>padding box</code>边界形成</li></ul></li></ol><ul><li><p>例如绝对定位元素的<strong>包裹性</strong>中的<strong>宽度自适应性</strong>其实也是相对于包含块表现的</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">box</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">position</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">absolute</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">box</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><ul><li>通常情况下,<code>.box</code>元素的宽度就是里面文字的宽度,不会换行.随着文字越多,如果文字足够多,.box元素的宽度会越来越大.但是不会无限制打下去,不能超过**.box包含块**的限制</li></ul></li><li><p><code>破坏性</code>:下面这个高度塌陷因为<code>absolute</code>破坏了正常的css流.<code>包裹性</code>:宽度被relative限制在最大的200px</p><ul><li>因此弹框这种绝对定位或者固定定位的元素是没有必要设置<code>max-width:100%</code></li></ul></li></ul><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">container</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">width</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">200px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">border</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">1px</span><span style="color:#A6ACCD;"> solid</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">position</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">relative</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">box</span><span style="color:#89DDFF;">{</span><span style="color:#B2CCD6;">position</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">absolute</span><span style="color:#89DDFF;">;}</span></span>
<span class="line"></span></code></pre></div><blockquote><p>absolute的特点</p></blockquote><ol><li>内联元素也可以作为<strong>包含块</strong>所在的元素</li><li><strong>包含块</strong>所在的元素不是父块级元素,而是最近的<code>position</code>不为static的祖先元素或根元素</li><li>边界是 <code>padding box</code>而不是 <code>content box</code></li></ol><h4 id="absolute的无依赖性" tabindex="-1">absolute的无依赖性 <a class="header-anchor" href="#absolute的无依赖性" aria-label="Permalink to &quot;absolute的无依赖性&quot;">​</a></h4><blockquote><p>实际上<code>absolute</code>在css中是非常独立的属性,不需要依赖其它css属性(例如父元素设置<code>position:relative</code>)</p></blockquote><ul><li><p>当然他的位置还是当前位置,不会是在浏览器左上方</p></li><li><p>absolute是非常独立的css属性,其样式和行为表现不依赖任何其他的css属性可以完成</p></li><li><p><strong>无依赖绝对定位</strong>:absolut定位效果完全不需要父元素设置<code>position:relative</code>或者其他属性就可以实现,这种没有<code>left/top/right/bottom</code>属性值的绝对定位叫做无依赖绝对定位</p><ul><li><strong>无依赖绝对定位</strong>本质上就是<strong>相对定位</strong>,仅仅是不会占据css的尺寸空间</li></ul></li><li><p>元素<code>position:absolute</code>后的display的计算值都是<code>block</code>(使元素块状化),但是其定位的位置和没有设置<code>position:absolute</code>时候的位置相关</p><ul><li>即使是内联的&lt;span&gt;,计算值都是block</li></ul></li></ul><h4 id="overflow与absolute" tabindex="-1">overflow与absolute <a class="header-anchor" href="#overflow与absolute" aria-label="Permalink to &quot;overflow与absolute&quot;">​</a></h4><blockquote><p>如果<code>overflow</code>不是定位元素,同时绝对定位元素和<code>overflow</code>容器之间也没有定位元素,则<code>overflow</code>无法对absolute元素进行裁剪</p></blockquote><ul><li>overflow元素可以裁减的情况 <ol><li><code>overflow</code>属性所在的元素同时也是定位元素,里面的绝对定位元素会被裁剪</li><li><code>overflow</code>元素和绝对定位元素之间也有定位元素,也会被裁剪</li></ol></li><li>注意:由于<code>position:fixed</code>固定定位元素的包含块是根元素,因此除非是窗体滚动,否则上面所有的规则都不适用</li><li><code>transform</code>也会改变裁剪的规则</li></ul><h4 id="absolute-与-clip" tabindex="-1">absolute 与 clip <a class="header-anchor" href="#absolute-与-clip" aria-label="Permalink to &quot;absolute 与 clip&quot;">​</a></h4><blockquote><p>裁剪属性(clip)只有当元素position是absolute或者是fixed是才会起作用</p></blockquote><ul><li><p>由于<code>position:fixed</code>属性使用overflow往往不会出现明显的效果,这时候就可以选择clip进行裁剪</p></li><li><p>可访问隐藏性的方式</p><ol><li>下策:<code>display:none</code>或者<code>visibitity:hidden</code>,屏幕阅读设备会忽略这里的文字</li><li>移动端上策:<code>color:transparent</code></li><li>上策:<code>clip</code>,完全支持,并且是视觉上的隐藏.并且不会有页面跳动的视觉问题</li></ol></li><li><p>clip决定订了哪一部分是隐藏的,对原来占据的空间并无影响.并且使用clip进行裁剪的元素<code>clientWidth</code>和<code>clientHeight</code>包括样式计算的宽高都是原来的大小</p></li></ul><h4 id="absolute的流体特性" tabindex="-1">absolute的流体特性 <a class="header-anchor" href="#absolute的流体特性" aria-label="Permalink to &quot;absolute的流体特性&quot;">​</a></h4><blockquote><p>当absolute中有定位元素(top,right,bottom,left)才会真正的变成绝对定位</p></blockquote><ul><li>当<code>left</code>和<code>right</code>同时存在的时候,宽度就不会是0,而是表现为<strong>格式化宽度</strong>,大小自适应包含块的<code>padding box</code></li></ul><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">box</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">position</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">absolute</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">left</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#B2CCD6;">right</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><ul><li>如果只设置了一个方向的绝对定位.水平放向绝对定位,垂直方向相对特性.</li></ul><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">box</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">position</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">absolute</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">left</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><blockquote><p>如果想让绝对定位元素宽高自适应于包含快,使用流体性的写法</p></blockquote><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">box</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">position</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">absolute</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">left</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#B2CCD6;">right</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#B2CCD6;">top</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#B2CCD6;">bottom</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">margin</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">30px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">box</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">position</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">absolute</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">left</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#B2CCD6;">top</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">width</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">100%</span><span style="color:#89DDFF;">;</span><span style="color:#B2CCD6;">height</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">100%</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">margin</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">30px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><ul><li>第一个会自动上下流出30px的空间,但是后者会跑到窗体之外,并不会在容器中</li><li>绝对定位的流体性是<strong>垂直和水平方向</strong>同时保持流动性.而普通元素只有一个方向,默认是<strong>水平的</strong></li></ul><blockquote><p>绝对定位的流体性和margin:auto的自动分配实现居中</p></blockquote><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">element</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">width</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">300px</span><span style="color:#89DDFF;">;</span><span style="color:#B2CCD6;">height</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">200px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">position</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">absolute</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">left</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#B2CCD6;">right</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#B2CCD6;">top</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#B2CCD6;">bottom</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">margin</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">auto</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h4 id="父元素设置position-relative" tabindex="-1">父元素设置<code>position:relative</code> <a class="header-anchor" href="#父元素设置position-relative" aria-label="Permalink to &quot;父元素设置\`position:relative\`&quot;">​</a></h4><ol><li>子级绝对定位,不会占有位置,可以放到父盒子里面的任何一个地方,不会影响其它的兄弟盒子</li><li>父盒子需要加定位限制子盒子在父盒子内显示</li><li>父盒子布局时,需要占有位置,因此父亲只能是相对定位</li></ol><h3 id="固定定位-fixed" tabindex="-1">固定定位(fixed) <a class="header-anchor" href="#固定定位-fixed" aria-label="Permalink to &quot;固定定位(fixed)&quot;">​</a></h3><ul><li>固定定位<code>position:fixed;</code>的包含块是根元素(&lt;html&gt;)</li><li>和无依赖的绝对定位类型,<strong>无依赖的固定定位</strong>利用absolute/fixed元素没有设置left/right/top/bottom的相对定位的特点,将元素定位到想要的位置</li><li>特点: <ol><li>以浏览器的可是窗口为参照点移动元素. <ul><li>跟父元素没有任何关系</li><li>不随滚动条移动</li></ul></li><li>固定定位<span style="color:red;">不再占有原先的位置</span><ul><li>固定定位也是脱标的,其实固定定位也可以看作是一种特殊的绝对定位</li></ul></li></ol></li></ul><h3 id="粘性定位-sticky" tabindex="-1">粘性定位(sticky) <a class="header-anchor" href="#粘性定位-sticky" aria-label="Permalink to &quot;粘性定位(sticky)&quot;">​</a></h3><ul><li>粘性定位可以被认为是相对定位和固定定位的混合<code>position:sticky;</code></li></ul><blockquote><p>粘性定位与相对定位相似的地方</p></blockquote><ol><li>元素发生偏移的时候,元素的原始位置保留</li><li>创建了新的绝对定位包含快.如果粘性定位的子元素设置left,right等方位属性是相对于当前粘性定位元素的</li><li>支持设置<code>z-index</code>的属性值来改变元素的层叠顺序</li></ol><blockquote><p>粘性定位与相对定位不一样的地方</p></blockquote><ol><li>偏移计算元素不一样.相对定位偏移甲酸的是父容器.<span style="color:red;">粘性定位偏移计算的元素是层级最近的可滚动元素(overflow不是visible的元素)</span>.如果没有,则相对视口滚动</li><li>偏移定位计算规则不一样</li><li>重叠表现不一样.相对元素彼此独立,重叠的表现为堆叠.而粘性定位重叠的时候会表现A粘性定位推开B粘性定位元素的表现</li></ol><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">html</span><span style="color:#89DDFF;">,</span><span style="color:#FFCB6B;">body</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">200%</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#FFCB6B;">nav</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">background-color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> black</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">position</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> sticky</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">top</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h4 id="可滚动元素对粘性定位的影响" tabindex="-1">可滚动元素对粘性定位的影响 <a class="header-anchor" href="#可滚动元素对粘性定位的影响" aria-label="Permalink to &quot;可滚动元素对粘性定位的影响&quot;">​</a></h4><ul><li>如果粘性定位元素的某个祖先元素的overflow属性值不是visible,那么窗体滚动就不会有粘性定位效果 <ul><li>因为此时的&lt;nav&gt;元素的粘性定位偏移计算是相对于父元素&lt;div&gt;的</li></ul></li></ul><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">div</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">overflow</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">hidden</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">nav</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">position</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">sticky</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">top</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">nav</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">nav</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div>`,77),t=l("iframe",{height:"300",style:{width:"100%"},scrolling:"no",title:"Untitled",src:"https://codepen.io/jack-zhang-1314/embed/oNwzPaZ?default-tab=html%2Cresult",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"},`
  See the Pen <a href="https://codepen.io/jack-zhang-1314/pen/oNwzPaZ">
  Untitled</a> by Jack-Zhang-1314 (<a href="https://codepen.io/jack-zhang-1314">@jack-zhang-1314</a>)
  on <a href="https://codepen.io">CodePen</a>.
`,-1),c=s('<ul><li>因此当网页希望是窗体滚动又是粘性效果,那么必须保证定位元素的祖先元素没有可滚动效果</li></ul><h4 id="粘性定位的计算规则" tabindex="-1">粘性定位的计算规则 <a class="header-anchor" href="#粘性定位的计算规则" aria-label="Permalink to &quot;粘性定位的计算规则&quot;">​</a></h4><blockquote><p>粘性定位的中有一个<code>流盒(flow box)</code>的概念,指的是粘性定位元素最近可滚动的元素的尺寸盒子</p></blockquote><ul><li><strong>粘性约束矩形</strong>:粘性定位元素(通常是父元素),在文档流中呈现的矩形区域<span style="color:red;">和流盒的4个边缘在应用粘性定位元素的left,top,right,bottom偏移计算值后的新矩形的交集</span></li><li>由于滚动的时候流盒不变,而粘性定位元素包含块滚动,<strong>因此粘性约束矩形随着滚动的进行是实时变化的</strong></li><li>粘性约束矩形是流盒矩形和包含快的重叠区域</li></ul><h4 id="粘性定位的堆叠规则" tabindex="-1">粘性定位的堆叠规则 <a class="header-anchor" href="#粘性定位的堆叠规则" aria-label="Permalink to &quot;粘性定位的堆叠规则&quot;">​</a></h4><blockquote><p>当粘性定位元素分布在不同容器的时候,就会有很多不同的粘性约束矩形,这些粘性约束矩形排列很整齐,于是在视觉上表现为上一个粘性定位元素被滚动走,下一个粘性定位呀u盛怒刚开始有粘性效果</p></blockquote><ul><li>当粘性定位都在一个容器里是,大家都共用一个巨大的一个巨大的粘性约束矩形,因此滚动元素会一个个不停的往上重叠</li></ul><h4 id="粘性定位的运用-层次滚动" tabindex="-1">粘性定位的运用:层次滚动 <a class="header-anchor" href="#粘性定位的运用-层次滚动" aria-label="Permalink to &quot;粘性定位的运用:层次滚动&quot;">​</a></h4>',8),r=l("iframe",{height:"300",style:{width:"100%"},scrolling:"no",title:"层次滚动",src:"https://codepen.io/jack-zhang-1314/embed/QWOoPqr?default-tab=html%2Cresult",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"},`
  See the Pen <a href="https://codepen.io/jack-zhang-1314/pen/QWOoPqr">
  层次滚动</a> by Jack-Zhang-1314 (<a href="https://codepen.io/jack-zhang-1314">@jack-zhang-1314</a>)
  on <a href="https://codepen.io">CodePen</a>.
`,-1),i=s('<ol><li>为表情图和网友评论元素都设置粘性定位,往右评论元素同时设置<code>z-index=-1</code>,将其藏在内容后面</li><li>每一段的标题和网友评论都使用一个&lt;section&gt;元素包起 来，让黏性定位元素隶属于不同的容器元素，这样就实现了依次置顶占位的效果</li></ol><h3 id="定位的特殊性" tabindex="-1">定位的特殊性 <a class="header-anchor" href="#定位的特殊性" aria-label="Permalink to &quot;定位的特殊性&quot;">​</a></h3><ol><li>行内元素添加绝对或者固定定位,可以直接设置高度和宽度</li><li>块级元素添加绝对或者固定定位,如果不给宽度或者高度,默认是内容的大小</li><li>绝对定位(固定定位)会完全压住盒子.浮动元素不会,只会眼珠它下面的标准流盒子,但是不会压住标准流盒子里面的文字,<span style="color:red;">浮动可以做文字环绕效果.</span></li></ol>',3),D=[e,t,c,r,i];function F(y,d,C,u,h,b){return n(),o("div",null,D)}const f=a(p,[["render",F]]);export{g as __pageData,f as default};
