import{_ as s,c as a,o as n,N as l}from"./chunks/framework.8361052b.js";const A=JSON.parse('{"title":"环境配置","description":"","frontmatter":{},"headers":[],"relativePath":"scss/环境配置.md"}'),e={name:"scss/环境配置.md"},o=l(`<h1 id="环境配置" tabindex="-1">环境配置 <a class="header-anchor" href="#环境配置" aria-label="Permalink to &quot;环境配置&quot;">​</a></h1><blockquote><ul><li>less,scss(sass)和stylus代码并不能被浏览器直接解析,所以必须先将它们编译成css代码</li><li>现有框架已经提供了css预处理器选项,编译相关配置会自动帮我们生成！所以只有在&quot;练习&quot;情况下才有必要安装该环境</li></ul></blockquote><h2 id="安装分类" tabindex="-1">安装分类 <a class="header-anchor" href="#安装分类" aria-label="Permalink to &quot;安装分类&quot;">​</a></h2><h3 id="不依赖编辑器" tabindex="-1">不依赖编辑器 <a class="header-anchor" href="#不依赖编辑器" aria-label="Permalink to &quot;不依赖编辑器&quot;">​</a></h3><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 全局安装scss预处理器,使用终端命令实现编译</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">a.</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Node环境下的node-sass模块</span></span>
<span class="line"><span style="color:#FFCB6B;">b.</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Node环境下的dart-sass模块</span></span>
<span class="line"><span style="color:#FFCB6B;">d.</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Dart环境下的sass模块</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 注：这里的推荐顺序针对的是&quot;练习&quot;场景,而开发环境下推荐使用的是dart-sass</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 本质：某个语言的第三方库或者命令行工具</span></span>
<span class="line"></span></code></pre></div><h3 id="依赖编辑器" tabindex="-1">依赖编辑器 <a class="header-anchor" href="#依赖编辑器" aria-label="Permalink to &quot;依赖编辑器&quot;">​</a></h3><blockquote><p>由编辑器本身提供编译</p></blockquote><h2 id="安装步骤" tabindex="-1">安装步骤 <a class="header-anchor" href="#安装步骤" aria-label="Permalink to &quot;安装步骤&quot;">​</a></h2><h3 id="node环境" tabindex="-1">Node环境 <a class="header-anchor" href="#node环境" aria-label="Permalink to &quot;Node环境&quot;">​</a></h3><h4 id="node-sass" tabindex="-1">node-sass <a class="header-anchor" href="#node-sass" aria-label="Permalink to &quot;node-sass&quot;">​</a></h4><ol><li>安装node <a href="https://nodejs.org" target="_blank" rel="noreferrer">https://nodejs.org</a>(官网) 或 <a href="https://npm.taobao.org/mirrors/node" target="_blank" rel="noreferrer">https://npm.taobao.org/mirrors/node</a>(镜像)</li><li>*安装cnpm(不推荐直接将源换为淘宝镜像!!) $npm i -g cnpm --registry=<a href="https://registry.npm.taobao.org" target="_blank" rel="noreferrer">https://registry.npm.taobao.org</a></li><li>安装<code>node-sass $npm i -g node-sass</code> 或 <code>$cnpm i -g node-sass</code></li><li>检查是否安装成功<code>$node-sass -v</code></li></ol><p><img src="https://raw.githubusercontent.com/ggdream/scss/master/sources.assets/image-20200706124420782.png" alt="image-20200706124420782"></p><p><img src="https://raw.githubusercontent.com/ggdream/scss/master/sources.assets/image-20200706132832305.png" alt="image-20200706132832305"></p><blockquote><p>使用</p></blockquote><ol><li><p>单文件编译</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">$node-sass  原有的scss文件 生成的css文件</span></span>
<span class="line"><span style="color:#A6ACCD;">$node-sass  原有的scss文件 -o 生成目录</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># example:</span></span>
<span class="line"><span style="color:#A6ACCD;">$node-sass a.scss b.css</span></span>
<span class="line"><span style="color:#A6ACCD;">$node-sass a.scss css_files</span></span>
<span class="line"></span></code></pre></div></li><li><p>多文件编译</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">$node-sass 原有的scss文件目录 -o 生成的css文件目录</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># example:</span></span>
<span class="line"><span style="color:#A6ACCD;">$node-sass c -o d</span></span>
<span class="line"></span></code></pre></div></li><li><p>文件监听模式</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 在&quot;1&quot;和&quot;2&quot;的基础上填加&quot;-w&quot;命令行参数即可</span></span>
<span class="line"><span style="color:#A6ACCD;">$node-sass -w 原有的scss文件 -o 生成目录</span></span>
<span class="line"><span style="color:#A6ACCD;">$node-sass -w 原有的scss文件目录 -o 生成的css文件目录</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># example:</span></span>
<span class="line"><span style="color:#A6ACCD;">$node-sass -w scss -o css</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 效果：编译进程不结束,监听文件内容</span></span>
<span class="line"></span></code></pre></div><p><img src="https://raw.githubusercontent.com/ggdream/scss/master/sources.assets/image-20200706134612609.png" alt="image-20200706134612609"></p></li></ol><h4 id="dart-sass" tabindex="-1">dart-sass <a class="header-anchor" href="#dart-sass" aria-label="Permalink to &quot;dart-sass&quot;">​</a></h4><ol><li>安装node <a href="https://nodejs.org" target="_blank" rel="noreferrer">https://nodejs.org</a>(官网) 或 <a href="https://npm.taobao.org/mirrors/node" target="_blank" rel="noreferrer">https://npm.taobao.org/mirrors/node</a>(镜像)</li><li>*安装cnpm(不推荐直接将源换为淘宝镜像!!) $npm i -g cnpm --registry=<a href="https://registry.npm.taobao.org" target="_blank" rel="noreferrer">https://registry.npm.taobao.org</a></li><li>安装<code>dart-sass $npm i -g sass</code> 或 <code>$cnpm i -g sass</code><ul><li>注：该模块为第三方库,所以可以考虑使用cnpm i sass -D(-D == --save-dev)仅对某个小项目当做开发时依赖进行使用</li></ul></li></ol><blockquote><p>使用</p></blockquote><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">/* 该模块的官方文档：https://sass-lang.com/documentation/js-api */</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> sass </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">sass</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">sass</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">render</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">file</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> scss_filename</span><span style="color:#89DDFF;">},</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">err</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">result</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">/* ... */</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// OR</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> result </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> sass</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">renderSync</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">file</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> scss_filename</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 注：默认情况下renderSync()的速度是render()的两倍以上,这是由于异步回调所带来的开销而导致的</span></span>
<span class="line"></span></code></pre></div><h3 id="😀-dart环境" tabindex="-1">😀 Dart环境 <a class="header-anchor" href="#😀-dart环境" aria-label="Permalink to &quot;😀 Dart环境&quot;">​</a></h3><ol><li>安装Dart <a href="https://dart.dev/tools/sdk/archive" target="_blank" rel="noreferrer">https://dart.dev/tools/sdk/archive</a></li><li>配置镜像,添加环境变量 <a href="https://pub.flutter-io.cn" target="_blank" rel="noreferrer">https://pub.flutter-io.cn</a> 或 <a href="https://mirrors.tuna.tsinghua.edu.cn/dart-pub/" target="_blank" rel="noreferrer">https://mirrors.tuna.tsinghua.edu.cn/dart-pub/</a></li><li>windows打开此电脑,添加系统变量 PUB_HOSTED_URL=<a href="https://pub.flutter-io.cn" target="_blank" rel="noreferrer">https://pub.flutter-io.cn</a><ul><li>Linux键入$echo &#39;export PUB_HOSTED_URL=&quot;<a href="https://pub.flutter-io.cn" target="_blank" rel="noreferrer">https://pub.flutter-io.cn</a>&quot;&#39; &gt;&gt; ~/.bashrc 或 /etc/profile</li></ul></li><li>安装sass <ul><li>全局安装：$pub global activate sass(可执行文件)</li><li>项目安装：pubspec.yaml填写好依赖后,执行 $pub get(.dart代码)</li></ul></li><li>检查是否安装成功$sass -v</li></ol><p><img src="https://raw.githubusercontent.com/ggdream/scss/master/sources.assets/image-20200706152755791.png" alt="image-20200706152755791"></p><p><img src="https://raw.githubusercontent.com/ggdream/scss/master/sources.assets/image-20200706153705517.png" alt="image-20200706153705517"></p><blockquote><p>使用</p></blockquote><h4 id="全局安装模式" tabindex="-1">全局安装模式 <a class="header-anchor" href="#全局安装模式" aria-label="Permalink to &quot;全局安装模式&quot;">​</a></h4><ol><li><p>单文件编译</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">$sass  原有的scss文件</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;">生成的css文件</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># example:</span></span>
<span class="line"><span style="color:#A6ACCD;">$sass a.scss b.css</span></span>
<span class="line"></span></code></pre></div></li><li><p>多文件编译</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">$sass 原有的scss文件目录/:生成的css文件目录/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># example:</span></span>
<span class="line"><span style="color:#A6ACCD;">$sass scss/:css/</span></span>
<span class="line"></span></code></pre></div></li><li><p>文件监听模式</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">$sass --watch 原有的scss文件:生成的css文件</span></span>
<span class="line"><span style="color:#A6ACCD;">$sass --watch 原有的scss文件目录:生成的css文件目录</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 注：都必须加上&quot;:&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># example:</span></span>
<span class="line"><span style="color:#A6ACCD;">$sass --watch scss:css</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 效果：编译进程不结束,监听文件内容</span></span>
<span class="line"></span></code></pre></div></li></ol><p><img src="https://raw.githubusercontent.com/ggdream/scss/master/sources.assets/image-20200706160732312.png" alt="image-20200706160732312"></p><h4 id="局部安装模式" tabindex="-1">局部安装模式 <a class="header-anchor" href="#局部安装模式" aria-label="Permalink to &quot;局部安装模式&quot;">​</a></h4><div class="language-dart"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">2.</span><span style="color:#A6ACCD;">运行</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">dart代码</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">// 前提是在pubsepc.yaml文件中添加依赖</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">// dev_dependencies:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">//sass: lastest</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// main.dart</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">&#39;package:sass/sass.dart&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">as</span><span style="color:#A6ACCD;"> sass</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#A6ACCD;">(</span><span style="color:#FFCB6B;">List</span><span style="color:#A6ACCD;">&lt;</span><span style="color:#FFCB6B;">String</span><span style="color:#A6ACCD;">&gt; args) {</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">print</span><span style="color:#A6ACCD;">(sass</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">compile</span><span style="color:#A6ACCD;">(args</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">first))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// or</span></span>
<span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#A6ACCD;">(</span><span style="color:#FFCB6B;">List</span><span style="color:#A6ACCD;">&lt;</span><span style="color:#FFCB6B;">String</span><span style="color:#A6ACCD;">&gt; args) {</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> result </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> sass</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">compile</span><span style="color:#A6ACCD;">(arguments[</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">])</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">File</span><span style="color:#A6ACCD;">(arguments[</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">])</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">writeAsStringSync</span><span style="color:#A6ACCD;">(result)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// dart main.dart styles.scss styles.css</span></span>
<span class="line"></span></code></pre></div><h3 id="依赖编辑器-1" tabindex="-1">*依赖编辑器 <a class="header-anchor" href="#依赖编辑器-1" aria-label="Permalink to &quot;*依赖编辑器&quot;">​</a></h3><h4 id="vscode" tabindex="-1">VSCode <a class="header-anchor" href="#vscode" aria-label="Permalink to &quot;VSCode&quot;">​</a></h4><ul><li>安装Easy Sass（编译）和Sass（代码提示）两个插件（注意大小写,否则找不到）</li><li>点击插件右下角的设置图标后点击&quot;扩展设置&quot;,最后点击&quot;在settings.json中编辑&quot;,开始设置关于Easy Sass的配置</li><li>会自动生成下方图片内的配置</li></ul><p><img src="https://raw.githubusercontent.com/ggdream/scss/master/sources.assets/image-20200706185328878.png" alt="image-20200706185328878"></p><ul><li>添加*&quot;easysass.targetDir&quot;: $path*,可将编译后的css文件放入*$path*路径下(默认为当前路径)。例如生成到css文件下内</li></ul><p><img src="https://raw.githubusercontent.com/ggdream/scss/master/sources.assets/image-20200706185722811.png" alt="image-20200706185722811"></p>`,35),p=[o];function t(c,r,i,y,d,C){return n(),a("div",null,p)}const u=s(e,[["render",t]]);export{A as __pageData,u as default};
