import{_ as l,c as s,o as e,N as a}from"./chunks/framework.8361052b.js";const o="/CSS/assets/Lineargradientdirection.8354ac7d.png",n="/CSS/assets/Lineargradientdirectionstart.e6291f22.png",t="/CSS/assets/Radialgradient.8cb3672d.png",p="/CSS/assets/Radialgradientstart.f2d1d63f.png",i="/CSS/assets/Conicalgradient.69855f1c.png",h=JSON.parse('{"title":"css","description":"","frontmatter":{},"headers":[],"relativePath":"css动画/渐变.md"}'),c={name:"css动画/渐变.md"},r=a('<h1 id="css" tabindex="-1">css <a class="header-anchor" href="#css" aria-label="Permalink to &quot;css&quot;">​</a></h1><h2 id="线性渐变-liner-gradient" tabindex="-1">线性渐变(liner-gradient()) <a class="header-anchor" href="#线性渐变-liner-gradient" aria-label="Permalink to &quot;线性渐变(liner-gradient())&quot;">​</a></h2><blockquote><p>渐变的方向需要单独指定.有两种方式,一种可以使用关键字<code>to</code>,一种直接使用角度值</p></blockquote><ul><li>如果是水平或者垂直渐变,更适合使用<code>to</code></li><li>渐变的方向:起始方向是从左下角开始的</li></ul><p><img src="'+o+'" alt="线性渐变方向"></p><ul><li>箭头指向的位置就是css渐变中45deg渐变和-45deg渐变角度的示意</li><li>45deg的渐变方向就是从左下方往右上方</li></ul><blockquote><p>渐变的起点和终点</p></blockquote><ul><li>渐变的起点位置不是从端点开始的,也不是从元素的某一条边开始,<span style="color:red;">而是从渐变角度所在直线的垂直线开始的</span></li><li>例如:<code>linear-gradient(45deg, white 100px, green 200px, white 200px);</code></li></ul><p><img src="'+n+'" alt="线性渐变的起始"></p><blockquote><p>渐变参数</p></blockquote><ol><li>只传入渐变颜色,默认从水平方向渐变,且渐变线出现在默认总高度的60% <ul><li>例:<code>linear-gradient(#fb3 50%, #58a 50%);</code></li><li>可以传入一个百分比:表示从哪里开始渐变</li><li>都是50%相当于平分盒子且没有渐变</li></ul></li><li>第一个参数可以传入一个渐变角度或者渐变名词 <ul><li><strong>渐变轴为45度,从蓝色渐变到红色</strong><ul><li><code>linear-gradient(45deg, blue, red);</code></li></ul></li><li><strong>从右下到左上、从蓝色渐变到红色</strong><ul><li><code>linear-gradient(to left top, blue, red);</code></li></ul></li></ul></li><li>多个参数 <ul><li><code>linear-gradient(0deg, blue, green 40%, red);</code><ul><li>从下到上,从蓝色开始渐变、到高度40%位置是绿色渐变开始、最后以红色结束</li></ul></li></ul></li></ol><ul><li><span style="color:red;">过渡的起止分色分别是第一个和最后一个指定值.且颜色不会在某个位置突然变化,而是一个平滑渐变的过程</span></li><li>渐变的一个规律:<strong>渐变的值一定要依次递增才会有渐变的效果,依次递减也不可以</strong></li></ul><blockquote><p>渐变的断点</p></blockquote><ol><li>渐变的断点至少需要两个值</li><li>断点语法中的颜色值和位置值的前后顺序必须是位置值必须在颜色值的后面</li><li>没有指定具体断点位置的时候,各个渐变颜色形成的色块是自动等分的 <ul><li><code>linear-gradient(blue, red,yellow,green);</code></li></ul></li><li>断点的位置可以是负数也可以大于100%</li><li>不同的类型的断点的位置可以同时使用 <ul><li><code>linear-gradient(blue 100px,yellow 50%);</code></li></ul></li><li>存在多个渐变断点,前面的断点设置的值比后面大时,后面的渐变断点位置会按照前面的断点位置来计算 <ul><li><code>linear-gradient(blue 20px,yellow 0px,green 40px);</code></li><li>实际上会按照<code>linear-gradient(blue 20px,yellow 20px,green 40px);</code>这个来渲染</li></ul></li><li>渐变断点支持一次性传入两个位置值 <ul><li><code>linear-gradient(blue 40%,yellow 40% 60%,blue 50%);</code></li><li>表示这个40%~60%范围内的颜色都是黄色</li></ul></li><li>设置转换点 <ul><li><code>background: liner-gradient(white,80%,black);</code></li><li>表示白色和黑色的中心转换点在80%的位置</li></ul></li></ol><h2 id="径向渐变-radial-gradient" tabindex="-1">径向渐变(radial-gradient()) <a class="header-anchor" href="#径向渐变-radial-gradient" aria-label="Permalink to &quot;径向渐变(radial-gradient())&quot;">​</a></h2><blockquote><p>径向渐变是由中心往外部的,默认终止于元素的边框内边缘</p></blockquote><p><img src="'+t+'" alt="径向渐变"></p><ul><li><p>如果希望水平半径只有50px,垂直半径还是默认大小,可以设置<code>50px 50%</code>为第一个参数</p><ul><li><code>background-image: radial-gradient(50px 50%, white, blue);</code></li><li>如果希望水平半径和垂直半径都是50px,可以直接设置<code>50px</code></li></ul></li><li><p>注意:<span style="color:red;">水平半径和垂直半径合写的时候,只能时长度值,不能是百分比值</span></p><ul><li>不合法:<code>background-image: radial-gradient(50%, white, blue);</code></li></ul></li></ul><blockquote><p>渐变点的中心位置.使用<code>at &lt;position&gt;</code>语法</p></blockquote><ul><li>如果想让渐变中心点在左上角,第一个参数可以写以下两种写法 <ol><li>100px at 0 0</li><li>100px at left top</li></ol><ul><li>渐变:图形从左上角以100px的半径开始渐变</li><li>如果希望中i先弄点距离右边缘和下边缘100px的位置开始 <ul><li><code>100px at right 100px bottom 100px</code></li></ul></li></ul></li></ul><blockquote><p>渐变的终止点(&lt;extent-keyword&gt;)</p></blockquote><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td><code>closest-side</code></td><td>渐变的边缘形状与容器距离渐变中心点最近的一边相切(圆形)或者至少与距离渐变中心点最近的垂直和水平边相切(椭圆)</td></tr><tr><td><code>closest-corner</code></td><td>渐变的边缘形状与容器距离渐变中心点最近的一个角相交.</td></tr><tr><td><code>farthest-side</code></td><td>与closest-side相反,边缘形状与容器距离渐变中心点最远的一边相切(或最远的垂直和水平边).</td></tr><tr><td><code>farthest-corner</code></td><td>渐变的边缘形状与容器距离渐变中心点最远的一个角相交. (默认值)</td></tr></tbody></table><p><img src="'+p+`" alt="径向渐变终止点"></p><ul><li>径向渐变的形状:circle(圆形),ellipse(椭圆).默认值是<strong>ellipse</strong><ul><li><code>radial-gradient(farthest-corner circle at right bottom, white, blue);</code></li><li>一般不会使用circle和ellipse,会直接使用渐变终止点的关键字</li></ul></li></ul><blockquote><p>径向渐变的语法</p></blockquote><ol><li>如果只有一个值,或者出现了circle关键字,后面的值只能是长度值,不能是百分比 <ul><li>不合法:<code>radial-gradient(circle 50%, white, blue)</code></li></ul></li><li>circle关键字和ellipse关键字在与半径值或者&lt;extent-keyword&gt;一起使用的时候,前后的顺序没有要求</li></ol><h2 id="锥形渐变-conic-gradient" tabindex="-1">锥形渐变(conic-gradient()) <a class="header-anchor" href="#锥形渐变-conic-gradient" aria-label="Permalink to &quot;锥形渐变(conic-gradient())&quot;">​</a></h2><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">conic-gradient( </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;"> from &lt;angle&gt; </span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;">? </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;"> at &lt;position&gt; </span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;">?</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> &lt;</span><span style="color:#FFCB6B;">angular-color-stop-list</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> )</span></span>
<span class="line"></span></code></pre></div><blockquote><p>锥形渐变由<code>起始角度</code>,<code>中心位置</code>,<code>角渐变断点</code>组成,并且起始角度和中心位置都是可以省略的</p></blockquote><p><img src="`+i+`" alt="锥形渐变"></p><ul><li>更改起始角度和中心位置 <ul><li><code>conic-gradient(from 45deg at 25% 25%,white,blue)</code></li><li>渐变起始角度45deg,中心位置地洞到了相对于元素左上角25%的位置</li></ul></li><li><span style="color:red;">角渐变断点只支持角度,不支持长度值</span></li></ul><blockquote><p>角渐变断点</p></blockquote><ul><li><p>角渐变断点中设置的角度是一个相对角度值,最终渲染的角度值是设置的角度值和起始角度值的累加</p><ul><li>例如:<code>conic-gradient(from 45deg ,white,blue 45deg,white)</code></li><li>此时blue实际渲染的坐标角度是90deg(45deg+45deg)</li></ul></li><li><p>同时也支持百分比</p><ul><li><code>conic-gradient(white,blue 45deg,white)</code></li><li><code>conic-gradient(white,blue 12.5%,white)</code></li><li>以上两个效果是一样的</li></ul></li></ul><blockquote><p>角渐变转换点(同样可以使用deg或者百分比)</p></blockquote><ul><li><code>conic-gradient(white,12.5%,red)</code></li></ul><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">/* 获得一个饼图 */</span></span>
<span class="line"><span style="color:#FFCB6B;">div</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">border-radius</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">50%</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">background</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">conic-gradient</span><span style="color:#89DDFF;">(from</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">40deg</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yellow </span><span style="color:#F78C6C;">40%</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> green </span><span style="color:#F78C6C;">40%</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">70%</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> blue </span><span style="color:#F78C6C;">70%</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100%</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="重复渐变" tabindex="-1">重复渐变 <a class="header-anchor" href="#重复渐变" aria-label="Permalink to &quot;重复渐变&quot;">​</a></h2><blockquote><p>线性渐变,径向渐变,锥形渐变都有对应的重复渐变函数,就是在各自之前增加<code>repeating</code></p></blockquote><ul><li><p><code>repeating-linear-gradient</code></p></li><li><p><code>repeating-radial-gradient</code></p></li><li><p><code>repeating-conic-gradient</code></p></li><li><p>重复渐变与非重复渐变的语法一样,区别在于渲染,非重复渐变的起止颜色位置如果是0%和100%,可以省略,<span style="color:red;">但是对于重复渐变,起止颜色位置需要明确定义</span></p></li></ul><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">stripe-border</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">150px</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">200px</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">border</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">20px</span><span style="color:#A6ACCD;"> solid</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">border-image</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">repeating-linear-gradient</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">135deg</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> deepskyblue </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">6px</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> white </span><span style="color:#F78C6C;">7px</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">12px</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">20</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div>`,40),d=[r];function C(u,y,g,D,F,A){return e(),s("div",null,d)}const k=l(c,[["render",C]]);export{h as __pageData,k as default};
