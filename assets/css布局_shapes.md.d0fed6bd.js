import{_ as a,c as e,o as l,N as s,x as o}from"./chunks/framework.8361052b.js";const D=JSON.parse('{"title":"shapes布局","description":"","frontmatter":{},"headers":[],"relativePath":"css布局/shapes.md"}'),n={name:"css布局/shapes.md"},p=s(`<h1 id="shapes布局" tabindex="-1">shapes布局 <a class="header-anchor" href="#shapes布局" aria-label="Permalink to &quot;shapes布局&quot;">​</a></h1><blockquote><p>shapes布局需要float属性配合使用,实现不规则图文的环绕效果</p></blockquote><ul><li>shapes布局相关的属性:<code>shape-outside</code>,<code>shape-margin</code>和<code>shape-image-threshold</code></li></ul><h2 id="shape-outside" tabindex="-1">shape-outside <a class="header-anchor" href="#shape-outside" aria-label="Permalink to &quot;shape-outside&quot;">​</a></h2><blockquote><p>shape-outside属性事shapes布局的核心,它支持一下4类</p></blockquote><ul><li><code>none</code>:默认值.表示普通的矩形环绕</li><li><code>&lt;shape-box&gt;</code>:表示图形盒子.比<code>clip-path</code>属性中的<code>&lt;geometry-box&gt;</code>(几何盒子)支持的盒子类型要少 <ul><li>分别是<code>margin-box</code>,<code>border-box</code>,<code>padding-box</code>和<code>content-box</code></li><li><code>&lt;shape-box&gt;</code>是指定文字环绕式依照哪个盒子边缘来计算</li></ul></li><li><code>&lt;basic-shape&gt;</code>表示基本图形函数,他和<code>clip-path</code>裁剪属性支持的基本形状函数一样</li><li><code>&lt;image&gt;</code>表示图像类,包括url链接图像,渐变函数,cross-fade()函数图像,element()函数图像等</li></ul><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">/*关键字*/</span></span>
<span class="line"><span style="color:#FFCB6B;">shape-outside</span><span style="color:#A6ACCD;">: </span><span style="color:#FFCB6B;">border-box</span><span style="color:#A6ACCD;">; </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/* 函数值 */</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#FFCB6B;">shape-outside</span><span style="color:#A6ACCD;">: circle(); </span></span>
<span class="line"><span style="color:#FFCB6B;">shape-outside</span><span style="color:#A6ACCD;">: inset(10px 10px 10px 10px); </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/* &lt;url&gt;值 */</span></span>
<span class="line"><span style="color:#FFCB6B;">shape-outside</span><span style="color:#A6ACCD;">: url(</span><span style="color:#FFCB6B;">image</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">png</span><span style="color:#A6ACCD;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/* 渐变值 */</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#FFCB6B;">shape-outside</span><span style="color:#A6ACCD;">: linear-gradient(45deg</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> rgba(255</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 255</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 255</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 0) 150px</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">red 150px);</span></span>
<span class="line"></span></code></pre></div><h3 id="关键字" tabindex="-1">关键字 <a class="header-anchor" href="#关键字" aria-label="Permalink to &quot;关键字&quot;">​</a></h3><blockquote><p>shape-outside属性值分别支持<code>none</code>,<code>margin-box</code>,<code>border-box</code>,<code>padding-box</code>和<code>content-box</code></p></blockquote>`,9),t=o("iframe",{height:"300",style:{width:"100%"},scrolling:"no",title:"shapes",src:"https://codepen.io/jack-zhang-1314/embed/poppygL?default-tab=html%2Cresult",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"},`
  See the Pen <a href="https://codepen.io/jack-zhang-1314/pen/poppygL">
  shapes</a> by Jack-Zhang-1314 (<a href="https://codepen.io/jack-zhang-1314">@jack-zhang-1314</a>)
  on <a href="https://codepen.io">CodePen</a>.
`,-1),c=s(`<h3 id="基本形状函数" tabindex="-1">基本形状函数 <a class="header-anchor" href="#基本形状函数" aria-label="Permalink to &quot;基本形状函数&quot;">​</a></h3><ul><li><code>circle()</code>:圆形</li><li><code>ellipse()</code>:椭圆</li><li><code>inset()</code>内矩形(包括圆角矩形)</li><li><code>polygon()</code>表示多边形</li></ul><ol><li><p><code>circle()</code>:函数语法<code>circle( [&lt;shape-radius&gt;]? [at &lt;position&gt;]? )</code></p><ul><li><code>&lt;shape-radius&gt;</code>表示圆形的半径.可以省略</li><li><code>position</code>表示圆心的位置.可以省略</li></ul><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">shape-outside</span><span style="color:#A6ACCD;">: circle(); </span></span>
<span class="line"><span style="color:#FFCB6B;">shape-outside</span><span style="color:#A6ACCD;">: circle(50%); </span></span>
<span class="line"><span style="color:#FFCB6B;">shape-outside</span><span style="color:#A6ACCD;">: circle(at 50% 50%);</span></span>
<span class="line"><span style="color:#FFCB6B;">shape-outside</span><span style="color:#A6ACCD;">: circle(50% at 50% 50%);</span></span>
<span class="line"></span></code></pre></div><ul><li>和使用<code>border-radius</code>实现圆形相比更加灵活, <ul><li>如果想要实现一个半圆的环绕效果<code>shape-outside:circle(50% at 0% 50%)</code></li></ul></li></ul></li><li><p><code>ellipse()</code>:函数语法:<code>ellipse( [&lt;shape-radius&gt;{2}]? [at &lt;position&gt;]? )</code></p><ul><li><code>&lt;shape-radius&gt;</code>:指的是水平半径和垂直半径</li><li><code>&lt;position&gt;</code>指的是圆心位置</li></ul><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">shape-outside</span><span style="color:#A6ACCD;">: ellipse(50px 75px); </span></span>
<span class="line"><span style="color:#FFCB6B;">shape-outside</span><span style="color:#A6ACCD;">: ellipse(at 50% 50%);</span></span>
<span class="line"><span style="color:#FFCB6B;">shape-outside</span><span style="color:#A6ACCD;">: ellipse(50px 75px at 50% 50%);</span></span>
<span class="line"></span></code></pre></div><ul><li>还支持<code>farthest-side</code>(最长边的长度)和<code>closest-side</code>(最短边的长度)这两个关键字</li><li>例如<code>ellipse(farthest-side,closest-side at 25% 25%)</code>. <ul><li>表示将浮动元素25% 25%的位置作为原点,以<strong>距离浮动元素为边缘的最长距离作为椭圆的x坐标</strong>,以<strong>距离浮动元素边缘最短的距离作为椭圆的y坐标</strong>.那么y水平半径就是75%,而垂直半径就是25%</li></ul></li></ul></li><li><p><code>inset()</code>:内矩形(包括圆角矩形)<code>inset( &lt;shape-arg&gt;{1,4} [round &lt;border-radius&gt;]? )</code></p><ul><li>其中<code>shape-arg</code>是必须参数,可以是1~4个指,这4个值分别表示当前元素的4个边缘为起点,从<strong>顶部</strong>,<strong>右侧</strong>,<strong>底部</strong>,<strong>左侧</strong>向内便宜的大小,这就是这4个值可以定义矩形形状边缘位置的原理</li><li><code>border-radius</code>表示矩形形状的圆角大小,可以不设置</li></ul><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">shape-outside</span><span style="color:#A6ACCD;">: inset(10px 20px 30px); </span></span>
<span class="line"><span style="color:#FFCB6B;">shape-outside</span><span style="color:#A6ACCD;">: inset(10px 20px 30px 40px);</span></span>
<span class="line"><span style="color:#FFCB6B;">shape-outside</span><span style="color:#A6ACCD;">: inset(10px 20px 30px 40px round 10px);</span></span>
<span class="line"></span></code></pre></div></li><li><p><code>polygon()</code>:多边形.<code>polygon( [&lt;fill-rule&gt;,]? [&lt;shape-arg&gt; &lt;shape-arg&gt;]# )</code></p><ul><li><code>fill-rule</code>表示填充规则,可以是<code>nonzero</code>和<code>evenodd</code>,默认值是<code>nonzero</code></li><li>常见的语法<code>polygon(x1 y1, x2 y2, x3 y3, ...)</code></li></ul></li></ol><h3 id="图像" tabindex="-1">图像 <a class="header-anchor" href="#图像" aria-label="Permalink to &quot;图像&quot;">​</a></h3><ol><li><p>url不规则的图形:实现原理就是浏览器会解析图像的透明度和非透明度区域.在默认设置下,浏览器会让文字沿着图像的非透明区域边缘排列,实现文字环绕不规则图形布局的效果</p><ul><li>如果不是同域名的图像是没有沿着图像边缘环绕效果的,需要设置<code>Access-Control- Allow-Origin</code>头信息中配置 了当前域名站点</li></ul><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">shape</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">float</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> left</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">200px</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#B2CCD6;">height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">300px</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">/* 文字环绕这个鹦鹉 */</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">shape-outside</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">url</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">./birds.png</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">/* 鹦鹉赋色并显示 */</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">background-color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">#</span><span style="color:#A6ACCD;">cd0000</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">mask</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">url</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">./birds.png</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> no-repeat</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div></li><li><p>渐变图像可以是线性渐变,径向渐变,锥形渐变和对应的重复渐变</p></li></ol><h2 id="shape-margin" tabindex="-1">shape-margin <a class="header-anchor" href="#shape-margin" aria-label="Permalink to &quot;shape-margin&quot;">​</a></h2><blockquote><p>shape-margin就是控制文字环绕图形是,文字与元素边界的距离.<span style="color:red;">由于shapes布局中,文字的环绕效果常常无视margin属性,想要文字和元素边界保持一定距离,最好使用shape-margin</span></p></blockquote><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">/* 长度值 */</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#FFCB6B;">shape-margin</span><span style="color:#A6ACCD;">: 10px;</span></span>
<span class="line"><span style="color:#FFCB6B;">shape-margin</span><span style="color:#A6ACCD;">: 20mm; </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/* 百分比值 */</span></span>
<span class="line"><span style="color:#FFCB6B;">shape-margin</span><span style="color:#A6ACCD;">: 60%;</span></span>
<span class="line"></span></code></pre></div><ul><li><code>shape-margin</code>的有效数值的范围是有限制的,即从0到浮动元素的边界,当<code>shape-margin</code>的属性值<strong>超过浮动元素的边界的时候</strong>,布局如同普通浮动布局的效果,不会产生不规则的环绕效果</li></ul><h2 id="shape-image-threshold" tabindex="-1">shape-image-threshold <a class="header-anchor" href="#shape-image-threshold" aria-label="Permalink to &quot;shape-image-threshold&quot;">​</a></h2><ul><li><p><code>shape-image-threshold</code>指图像环绕的时候半透明阈值,默认是0.0,也就是图像<strong>透明度</strong>为0的区域边界才能被文字环绕.同理,如果属性值是0.5,那么表示<strong>透明度</strong>小于0.5的区域都可以被文字环绕</p></li><li><p>例如.我们设置一个从实色到透明的倾斜线性渐变图形,该图形的透明度范围是从0~1都覆盖了,因为设定不同的<code>shape-image-threshold</code>属性值一定会产生不同的布局变化</p></li></ul>`,11),i=[p,t,c];function r(d,h,C,y,u,A){return l(),e("div",null,i)}const F=a(n,[["render",r]]);export{D as __pageData,F as default};
