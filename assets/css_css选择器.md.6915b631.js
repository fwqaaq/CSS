import{_ as s,c as l,o as a,N as n}from"./chunks/framework.8361052b.js";const u=JSON.parse('{"title":"css","description":"","frontmatter":{},"headers":[],"relativePath":"css/css选择器.md"}'),o={name:"css/css选择器.md"},p=n(`<h1 id="css" tabindex="-1">css <a class="header-anchor" href="#css" aria-label="Permalink to &quot;css&quot;">​</a></h1><h2 id="css选择器" tabindex="-1">css选择器 <a class="header-anchor" href="#css选择器" aria-label="Permalink to &quot;css选择器&quot;">​</a></h2><blockquote><p>css选择器分为四类,选择器,选择符,伪类和伪元素</p></blockquote><ol><li>选择器:即平常使用的css声明块之前的标签,类名</li><li>选择符:例如<code>( )</code>,<code>*</code>等等</li><li>伪类:前面会有一个冒号<code>:</code></li><li>伪元素:前面会有两个<code>::</code></li></ol><blockquote><p>选择器作用域<code>:scope</code>,不会在整个文档中寻找,而是当下元素的作用域中寻找符合元素</p></blockquote><h3 id="命名" tabindex="-1">命名 <a class="header-anchor" href="#命名" aria-label="Permalink to &quot;命名&quot;">​</a></h3><ol><li>命名建议使用小写,使用英文单词或者缩写(不建议使用驼峰,那是js的规范)</li><li>对于组合命名可以使用<code>-</code>或者<code>_</code>连接</li><li>设置统一前缀,避免样式名冲突</li></ol><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">login-header</span><span style="color:#89DDFF;">{}</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">login-logo</span><span style="color:#89DDFF;">{}</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">login-logo-a</span><span style="color:#89DDFF;">{}</span></span>
<span class="line"></span></code></pre></div><h3 id="优先级" tabindex="-1">优先级 <a class="header-anchor" href="#优先级" aria-label="Permalink to &quot;优先级&quot;">​</a></h3><ul><li>选择器相同 执行层叠性</li><li>选择器不同,则根据<span style="color:red;">选择器权重</span>执行</li></ul><table><thead><tr><th>选择器</th><th>选择器权重</th></tr></thead><tbody><tr><td>继承或者*</td><td>0,0,0,0</td></tr><tr><td>元素选择器</td><td>0,0,0,1</td></tr><tr><td>类选择器,伪类选择器</td><td>0,0,1,0</td></tr><tr><td>ID选择器</td><td>0,1,0,0</td></tr><tr><td>行内样式style=&quot;&quot;</td><td>1,0,0,0</td></tr><tr><td>!important重要的</td><td>无穷大</td></tr></tbody></table><ul><li><p>注意:</p><ol><li>权重是有4组数字,不会有进位</li><li>从左向右判断,如果某一位数值相同,则判断下一位数值</li><li><span style="color:red;">继承的权重是0,(重要)</span>,如果该元素没有直接选中,不管父元素权重多高,子元素得到的权重都是0</li></ol></li><li><p>权重叠加:如果是复合选择器,则会有权重叠加,需要计算权重</p></li></ul><h3 id="选择符" tabindex="-1">选择符 <a class="header-anchor" href="#选择符" aria-label="Permalink to &quot;选择符&quot;">​</a></h3><blockquote><p>后代选择器<code>( )</code>:元素1元素2{样式},例<code>ul li {color:red;}</code></p></blockquote><ul><li>注意:元素2必须是子级,只要是元素的子级都可以选到</li><li>元素1和2可以是任意基础选择器</li></ul><blockquote><p>子选择器<code>&gt;</code>(重要):<code>元素1&gt;元素2</code>(样式声明),表示选择元素1里的所有直接后代的(子元素)元素2,例:<code>div &gt; a{color:red;}</code></p></blockquote><ul><li><p>元素1是父级,元素2是子级,最终选择的元素是元素2</p></li><li><p>元素2必须是最近一级的子级(亲儿子),子子集(孙子)等都不归他管</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">div</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">a</span><span style="color:#89DDFF;">{</span><span style="color:#B2CCD6;">color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">red</span><span style="color:#89DDFF;">;}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">...</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">href</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">#</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">你好</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">href</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">#</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">你好(选不到)</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div></li><li><p><span style="color:red;">注意:尽量避免使用子选择符,一旦使用了子选择符,元素的层级关系就被定死了</span></p></li></ul><blockquote><p>相邻兄弟选择符(<code>+</code>):用于选择相邻的兄弟元素,但是只能选择后面的一个元素</p></blockquote><ul><li>元素会主动忽略文本节点和注释节点</li></ul><blockquote><p>随后兄弟选择符<code>(~)</code>:随后兄弟选择符会匹配后面的所有元素,而相邻兄弟选择符,只会匹配后面的第一个元素</p></blockquote><ul><li>由于DOM层级是从前往后,由外及里渲染的,所以没有前面的兄弟选择符</li></ul><blockquote><p>列选择符双道(||):可以理解为属于的意思</p></blockquote><ul><li>在Table或者Grid布局中,希望控制整列的方式</li></ul><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">col</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">selected</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">| </span><span style="color:#FFCB6B;">td</span><span style="color:#89DDFF;">{}</span></span>
<span class="line"></span></code></pre></div><h3 id="选择器" tabindex="-1">选择器 <a class="header-anchor" href="#选择器" aria-label="Permalink to &quot;选择器&quot;">​</a></h3><h4 id="提高优先级" tabindex="-1">提高优先级 <a class="header-anchor" href="#提高优先级" aria-label="Permalink to &quot;提高优先级&quot;">​</a></h4><blockquote><p>类选择器,id选择器,和属性值匹配选择器可以重复自身</p></blockquote><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">foo</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">foo</span><span style="color:#89DDFF;">{}</span></span>
<span class="line"><span style="color:#89DDFF;">#</span><span style="color:#F78C6C;">foo</span><span style="color:#89DDFF;">#</span><span style="color:#F78C6C;">foo</span><span style="color:#89DDFF;">{}</span></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#C792EA;">foo</span><span style="color:#89DDFF;">][</span><span style="color:#C792EA;">foo</span><span style="color:#89DDFF;">]{}</span></span>
<span class="line"></span></code></pre></div><blockquote><p>借助html页面中都有的&lt;body&gt;&lt;html&gt;提高优先级</p></blockquote><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">html</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">foo</span><span style="color:#89DDFF;">{}</span></span>
<span class="line"></span></code></pre></div><blockquote><p>借助<code>:not()</code>伪类,表示任意和括号里不一样的标签名即可</p></blockquote><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">foo</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">not</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">foo</span><span style="color:#89DDFF;">){}</span></span>
<span class="line"></span></code></pre></div><h4 id="元素选择器" tabindex="-1">元素选择器 <a class="header-anchor" href="#元素选择器" aria-label="Permalink to &quot;元素选择器&quot;">​</a></h4><ol><li><p>标签选择器: <code>h2{}</code></p><ul><li>标签选择器,只能写在属性值选择器前面,但是类选择器完全可以写在属性值选择器之后</li><li>因为css选择器的解析是从右往左进行的</li></ul><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">/* 正确 */</span></span>
<span class="line"><span style="color:#FFCB6B;">input</span><span style="color:#89DDFF;">[</span><span style="color:#C792EA;">value</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]{}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/* 错误 */</span></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#C792EA;">value</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span><span style="color:#FFCB6B;">input</span><span style="color:#89DDFF;">{}</span></span>
<span class="line"></span></code></pre></div></li><li><p>类选择器:样式点定义 结构类(class)调用 一个或多个</p><ul><li><span style="color:red;">注意:可以写多个类名,但是中间必须使用空格</span></li></ul></li><li><p>id选择器:样式#定义,结构id调用,只能调用一次,其它切勿调用</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">#</span><span style="color:#F78C6C;">red</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">red</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">...</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">h2</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">id</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">red</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">你好</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">h2</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div></li><li><p>通配符选择器:<code>*{}</code>所有标签的属性都会增加</p></li></ol><h4 id="属性选择器" tabindex="-1">属性选择器 <a class="header-anchor" href="#属性选择器" aria-label="Permalink to &quot;属性选择器&quot;">​</a></h4><blockquote><p>[attr]:表示只要含有指定的属性就会匹配,尤其是使用一些html布尔属性,这些布尔属性值的内容是什么,都认为这些属性值是true</p></blockquote><ul><li><p>同时attr属性不仅支持原生,同时也可以自定义</p><table><thead><tr><th>选择符</th><th>简介</th></tr></thead><tbody><tr><td>E[att]</td><td>选择具有att属性的E元素</td></tr><tr><td>E[att=&quot;val&quot;]</td><td>选择具有att属性且属性值等于val的E元素</td></tr><tr><td>E[att</td><td>=&quot;val&quot;]</td></tr><tr><td>E[att~=&quot;val&quot;]</td><td>选择具有att属性且属性值包含val的E元素</td></tr><tr><td>E[att^=&quot;val&quot;]</td><td>匹配具有att属性且值以val开头的E元素</td></tr><tr><td>E[att$=&quot;val&quot;]</td><td>匹配具有att属性且值以val结尾的E元素</td></tr><tr><td>E[att*=&quot;val&quot;]</td><td>匹配具有att属性且值中含有的E元素</td></tr></tbody></table></li></ul><blockquote><p><code>E[att~=&quot;val&quot;]</code>:匹配属性中的单词,其中~用来连接属性和属性值</p></blockquote><ul><li>像class属性或者rel等属性包含多个关键词,就可以使用</li></ul><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#C792EA;">attr</span><span style="color:#89DDFF;">~=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">val</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]{}</span></span>
<span class="line"></span></code></pre></div><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- 不匹配 --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">attr</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">value</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- 不匹配 --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">attr</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">val-ue</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- 匹配 --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">attr</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;"> val </span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- 匹配 --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">attr</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;"> val   ue</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><ul><li>如果字符串前后有空格或者连续多个,才可以匹配</li></ul><blockquote><p>E[att|=&quot;val&quot;] 选择具有att属性且属性值是val或者val开头并且使用<code>-</code>连接</p></blockquote><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#C792EA;">attr</span><span style="color:#89DDFF;">|=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">val</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]{}</span></span>
<span class="line"></span></code></pre></div><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- 不匹配 --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">attr</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">value</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- 匹配 --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">attr</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">val-ue</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- 匹配 --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">attr</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">val</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- 不匹配 --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">attr</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">val bar</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- 不匹配 --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">attr</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">bar val-ue</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><h4 id="忽略属性值大小写的正则匹配运算符" tabindex="-1">忽略属性值大小写的正则匹配运算符 <a class="header-anchor" href="#忽略属性值大小写的正则匹配运算符" aria-label="Permalink to &quot;忽略属性值大小写的正则匹配运算符&quot;">​</a></h4><blockquote><p>其中<code>i</code>字符是正则匹配运算符,可以忽略属性值的大小写</p></blockquote><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#C792EA;">attr</span><span style="color:#89DDFF;">~=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">val</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">i</span><span style="color:#89DDFF;">]{}</span></span>
<span class="line"></span></code></pre></div><h3 id="伪类" tabindex="-1">伪类 <a class="header-anchor" href="#伪类" aria-label="Permalink to &quot;伪类&quot;">​</a></h3><h4 id="用户伪类选择器" tabindex="-1">用户伪类选择器 <a class="header-anchor" href="#用户伪类选择器" aria-label="Permalink to &quot;用户伪类选择器&quot;">​</a></h4><ul><li><code>a:link</code> /<em>选择所有未被访问的链接</em>/</li><li><code>a:visited</code> /<em>选择所有已被访问的链接</em>/</li><li><code>a:hover</code> /<em>选择所有指针位于其上的链接</em>/</li><li><code>a:active</code> /<em>选择所有活动的链接(鼠标按下未弹起)</em>/</li><li>注意: <ul><li><span style="color:red;">请按照LVHA的顺序声明:link-:visited-:hover-:active</span></li><li>因为链接在浏览器中有单独默认样式,所以在实际工作中需要给链接指定单独样式</li></ul></li></ul><blockquote><p><code>:focus</code>伪类选择器,用于获得焦点.默认纸皮撇特定元素</p></blockquote><ol><li>非disabled状态的元素,如&lt;input&gt;输入框,&lt;select&gt;,&lt;button&gt;等</li><li>包含href的&lt;a&gt;</li><li>html5中的&lt;summary&gt;</li></ol><ul><li><span style="color:red;">如果设置了<code>contenteditable</code></span>属性的普通元素也可以使用<code>:focus</code></li></ul><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">contenteditable</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">true</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><blockquote><p><code>:focus-within</code>会在当前元素或者当前元素的任意子元素处于聚焦状态就会触发</p></blockquote><ul><li>然而<code>:focus</code>只有在当前元素处于聚焦状态的时候才匹配</li></ul><blockquote><p><code>:focus-visible</code>:元素聚焦,同时浏览器认为聚焦轮廓应该显示</p></blockquote><ul><li><p>当我们使用键盘或者鼠标访问链接元素&lt;a&gt;是,鼠标点击不会有轮廓,而键盘会有</p></li><li><p>浏览器认为使用键盘访问触发元素聚焦才是<code>:focus-visible</code>所表现的聚焦</p><ul><li>可以让我们知到元素的聚焦行为到底是鼠标触发还是浏览器触发</li></ul></li><li><p>去除鼠标点击的outline,保留键盘触发的outline</p></li></ul><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">focus</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">not</span><span style="color:#89DDFF;">(:</span><span style="color:#C792EA;">focus-visible</span><span style="color:#89DDFF;">){</span><span style="color:#B2CCD6;">outline</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;}</span></span>
<span class="line"></span></code></pre></div><h4 id="url伪类" tabindex="-1">url伪类 <a class="header-anchor" href="#url伪类" aria-label="Permalink to &quot;url伪类&quot;">​</a></h4><blockquote><p>链接地址访问有关的两个伪类</p></blockquote><ul><li><code>a:link</code> /<em>选择所有未被访问的链接</em>/</li><li><code>a:visited</code> /<em>选择所有已被访问的链接</em>/</li></ul><blockquote><p><code>:target</code>,标记锚点锚定的元素(只有在url产生锚点的一瞬间会触发伪类的匹配)</p><p><code>:target-within</code>:会在当前元素或者当前元素的任意子元素处于聚焦状态就会触发</p></blockquote><h4 id="控件伪类" tabindex="-1">控件伪类 <a class="header-anchor" href="#控件伪类" aria-label="Permalink to &quot;控件伪类&quot;">​</a></h4><blockquote><p><code>:disabled</code>当元素处于禁用状态时触发</p></blockquote><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">input</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">disabled</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">[</span><span style="color:#C792EA;">disabled</span><span style="color:#89DDFF;">]:</span><span style="color:#C792EA;">disabled</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">background</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">red</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><ul><li>关于<code>:enabled</code>伪类.由于表单元素迷人就是<code>enabled</code>状态的,不需要额外匹配<code>:enabled</code></li></ul><blockquote><p>读写特性伪类<code>:read-only</code>和<code>:read-write</code></p></blockquote><ul><li>这两个伪类中作用于&lt;input&gt;和&lt;textarea&gt;</li><li>由于输入框的默认状态就是<code>:read-write</code>,基本不会使用</li></ul><blockquote><p><code>:placeholder-shown</code>,占位显示伪类</p></blockquote><ul><li><code>:placeholder-shown</code>与<code>placeholder</code>属性密切相关,当输入框<code>placeholder</code>内容显示的时候,匹配该输入框</li></ul><blockquote><p><code>:default</code>默认选项伪类</p></blockquote><ul><li>只作用于表单元素,表示处于默认状态的表单元素</li></ul><blockquote><p><code>:checked</code>:选中选项伪类</p></blockquote><ul><li>不要直接使用<code>[checked]</code><ul><li><code>:checked</code>只能匹配标准的表单元素,不能匹配其它的元素,即使这个元素设置<code>checked</code>属性.不过[checked]属性选择器可与任意元素匹配</li><li>[checked]属性的变化也不是实时的</li></ul></li></ul><blockquote><p><code>:indeterminate</code>不确定值伪类</p></blockquote><ul><li>在复选框中除了选中和没选中状态还有半选状态.由于没有原生的html属性,只能使用js属性设置<code>checkbox.indeterminate=true</code></li><li>这个伪类可以用来提示用户尚未选择任何选项,如果有选项选项,则自动消失</li></ul><blockquote><p><code>:required和:optional</code>可选性伪类</p></blockquote><ul><li><code>:required</code>伪类用于匹配设置required属性的表单元素,表示这谷歌元素必填(只会匹配设置了required属性的元素)</li><li><code>:optional</code>伪类可以当作<code>:required</code>的对立面,只要表单元素没有设置<code>required</code>属性,都可以匹配:optional属性</li></ul><h3 id="树结构伪类" tabindex="-1">树结构伪类 <a class="header-anchor" href="#树结构伪类" aria-label="Permalink to &quot;树结构伪类&quot;">​</a></h3><blockquote><p><code>:root</code>表示文档根元素伪类</p></blockquote><ul><li><code>:root</code>与&lt;html&gt;的区别:首先<code>:root</code>伪类的优先级更高,伪类的优先级比标签选择器高一个等级</li><li>一般用于存放css自定义变量</li></ul><blockquote><p><code>:empty</code>伪类</p></blockquote><ol><li><code>:empty</code>伪类用于匹配空元素标签</li><li>同时也可以匹配前后闭合的替换元素,如&lt;button&gt;和&lt;textarea&gt;</li><li>还可以匹配非闭合元素,如&lt;img&gt;,&lt;input&gt;,&lt;hr&gt;等</li></ol><ul><li><p>如果在元素内有文本节点或者注释节点,包括空格换行,都不可以匹配</p></li><li><p><code>::before</code>和<code>::after</code>伪元素可以给标签插入内容,图形,但是不会影响<code>:empty</code>伪类的匹配</p></li><li><p>如果某个模块是动态的,这些模块容器包含影响布局的css属性,如margin等.一旦这些模块里的东西变为空页面上就有一块很大的空白</p></li><li><p>这种情况就可以使用<code>:empty</code>伪类控制</p></li></ul><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">cs-module</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">empty</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">none</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h4 id="子索引伪类" tabindex="-1">子索引伪类 <a class="header-anchor" href="#子索引伪类" aria-label="Permalink to &quot;子索引伪类&quot;">​</a></h4><blockquote><p><code>E:first-child</code>:匹配E元素中的第一个元素(或者说当前作用域的第一个)</p></blockquote><ul><li><code>E:last-child</code>:匹配E元素中的最后一个元素</li></ul><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">li</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">first-child</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">red</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">...</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">ul</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">li</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">hhhh</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">li</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">li</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">hhhh</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">li</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">li</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">hhhh</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">li</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">li</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">hhhh</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">li</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">ul</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><blockquote><p><code>:only-child</code>:匹配没有任何兄弟元素的元素</p></blockquote><ul><li>可以用到很多动态的场景,例如某个加载(loading)模块里有一段加载文字,或者只有一张加载图片,或者两者需要同时出现,此时使用就可以使用<code>:only-child</code></li></ul><blockquote><p><code>E:nth-child(n)</code>:匹配E元素中的第n个元素</p><p><code>E:nth-last-child(n)</code>:从后往前匹配,匹配E元素中的第n个元素</p></blockquote><ul><li>nth-child(n) 选择某个父元素的一个或多个特定的子元素 <ul><li>n可以是数字,关键字和公式</li><li>n如果是数字,就是第n个子元素,里面数字从1开始</li><li>n可以是关键字:even是偶数,odd是奇数</li><li>n可以是公式:常见的公式如下(如果n是公式,则从0开始计算,但是第0个元素或者超出的元素会被忽略)</li></ul></li></ul><table><thead><tr><th>公式</th><th>取值</th></tr></thead><tbody><tr><td>2n</td><td>偶数</td></tr><tr><td>2n+1</td><td>奇数</td></tr><tr><td>5n</td><td>5 10 ....</td></tr><tr><td>n+5</td><td>从第五个开始(包含第五个)到最好</td></tr><tr><td>-n+5</td><td>前五个(包含第五个)</td></tr></tbody></table><ul><li>注意:<code>nth-child(n)</code>给所有元素都排列序号,要求选择器与标签匹配得当</li><li>注意:<code>nth-of-type(n)</code>给指定元素都排列序号</li><li>注意:使用与动态,无法确定的匹配场景,如果是纯静态的,不管是列表,都最好用属性选择器或者类名</li></ul><h4 id="匹配类型的子索引伪类" tabindex="-1">匹配类型的子索引伪类 <a class="header-anchor" href="#匹配类型的子索引伪类" aria-label="Permalink to &quot;匹配类型的子索引伪类&quot;">​</a></h4><blockquote><p>匹配类型的子索引伪类会在同级目录中相同标签元素进行索引域解析(需要使用语义化标签)</p></blockquote><ul><li><code>:first-of-type</code>:指定同级类型各个元素怒的第一个或者当前标签的元素</li><li><code>:last-of-type</code>:指定同级类型各个元素怒的最后一个或者当前标签的元素</li></ul><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">ul</span><span style="color:#89DDFF;">&gt;:</span><span style="color:#C792EA;">first-of-type</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> red</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">ul</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">li</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">chifan</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">li</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">li</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">hhhh</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">li</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">dt</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">aaa</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">dt</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">dt</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">aaa</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">dt</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">ul</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><blockquote><p><code>:only-of-type</code>:匹配同级唯一的标签类型元素,或者当前标签的元素</p></blockquote><ul><li><code>:nth-of-type(n)</code>匹配同级类型各个元素或者当前标签的元素</li><li><code>:nth-last-of-type(n)</code>从后往前匹配,匹配同级类型各个元素或者当前标签的元素</li></ul><h3 id="逻辑组合伪类" tabindex="-1">逻辑组合伪类 <a class="header-anchor" href="#逻辑组合伪类" aria-label="Permalink to &quot;逻辑组合伪类&quot;">​</a></h3><blockquote><p><code>:not()</code>否定伪类,如果当前元素域括号里的选择器不匹配,则该伪类进行匹配</p></blockquote><ol><li><p>:not()伪类的优先级是0,本省没有任何优先级,最终选择器的优先级由括号里的表达式决定</p></li><li><p>:not()可以不断联级</p><ul><li><code>input:not(:disabled):not(:read-only){}</code></li><li>匹配所有不处于禁用状态,也不处于只读状态的&lt;input&gt;</li></ul></li><li><p>:not()伪类目前已支持多个表达式</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">button</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">not</span><span style="color:#89DDFF;">(.</span><span style="color:#FFCB6B;">a</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">b</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">background-color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> green</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">没有class</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">a</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">class=&quot;a&quot;</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">b</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">class=&quot;a b&quot;</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">a b</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">class=&quot;a b&quot;</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div></li><li><p>:not()可以优化重置css样式的策略</p><ul><li>并且他的代码更简洁,更易维护和理解</li></ul></li></ol><blockquote><p><code>:is()</code>:伪类可以把括号里的选择器依次分配出取,对于那种复杂的有很多都好分割的选择器非常有用</p></blockquote><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">/* 不使用is */</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">cs-avatar1</span><span style="color:#89DDFF;">&gt;</span><span style="color:#FFCB6B;">img</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">cs-avatar2</span><span style="color:#89DDFF;">&gt;</span><span style="color:#FFCB6B;">img</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">cs-avatar3</span><span style="color:#89DDFF;">&gt;</span><span style="color:#FFCB6B;">img</span><span style="color:#89DDFF;">{}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/* 使用is */</span></span>
<span class="line"><span style="color:#A6ACCD;">:is(</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">cs-avatar</span><span style="color:#89DDFF;">,.</span><span style="color:#FFCB6B;">cs-avata2</span><span style="color:#89DDFF;">,.</span><span style="color:#FFCB6B;">cs-avata3</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">&gt;</span><span style="color:#FFCB6B;">img</span><span style="color:#89DDFF;">{}</span></span>
<span class="line"></span></code></pre></div><blockquote><p>:where()任意匹配伪类</p></blockquote><ul><li>他与<code>:is()</code>伪类的含义语法完全一样,唯一的区别就是<code>:where()</code>的优先级永远是0</li></ul><h3 id="其它伪类" tabindex="-1">其它伪类 <a class="header-anchor" href="#其它伪类" aria-label="Permalink to &quot;其它伪类&quot;">​</a></h3><blockquote><p>方向伪类<code>:dir(ltr|rtl)</code>,可以直接使用html中的dir属性</p></blockquote><ul><li>像聊天记录的对话框</li><li>有时候我们希望布局元素是从右往左排列的.由于使用<code>[dir=&quot;rtl&quot;]</code>会使子元素继承这样的文档流形式</li><li>所以使用<code>:dir()</code>伪类可以更精确的匹配</li></ul>`,113),t=[p];function e(c,r,F,i,D,y){return a(),l("div",null,t)}const C=s(o,[["render",e]]);export{u as __pageData,C as default};
