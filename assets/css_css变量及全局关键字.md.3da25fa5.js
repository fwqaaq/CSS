import{_ as s,c as a,o as l,N as n}from"./chunks/framework.8361052b.js";const A=JSON.parse('{"title":"css","description":"","frontmatter":{},"headers":[],"relativePath":"css/css变量及全局关键字.md"}'),p={name:"css/css变量及全局关键字.md"},o=n(`<h1 id="css" tabindex="-1">css <a class="header-anchor" href="#css" aria-label="Permalink to &quot;css&quot;">​</a></h1><h2 id="使用css自定义属性" tabindex="-1">使用css自定义属性 <a class="header-anchor" href="#使用css自定义属性" aria-label="Permalink to &quot;使用css自定义属性&quot;">​</a></h2><blockquote><p>使用css自定义属性,是由css作者自定义的,他包含的值可以在整个<code>document</code>中重复使用</p></blockquote><ol><li>使用自定义属性在某个地方存储一个值,然后在其他许多地方引用它</li><li>更好的语义化标识.并且使css语法的扩展成为可能,例如<code>attr()</code>是一个具有颠覆性的函数</li><li>自定义属性受级联的约束,并从其父级继承其值（<span style="color:red;">自定义属性必须要定义在父级以上,才可以在子级中使用</span>）</li></ol><h3 id="基础语法" tabindex="-1">基础语法 <a class="header-anchor" href="#基础语法" aria-label="Permalink to &quot;基础语法&quot;">​</a></h3><blockquote><ul><li>声明一个自定义属性,属性名需要以两个减号（--）开始,属性值则可以是任何有效的CSS值</li><li>通常定义在根伪类<code>:root</code>下,这样就可以在HTML的任何地方访问到了</li></ul></blockquote><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">root</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  --main-bg-color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> black</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><ul><li>使用一个局部变量时用<code>var()</code>函数包裹以表示一个合法的属性值可以访问到其值</li></ul><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">body</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">background-color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">var</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">--main-bg-color</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><blockquote><p>设置属性备用值</p></blockquote><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">two</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">var</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">--my-var</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> red</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><ul><li>如果<code>--my-var</code>没有定义,可以直接使用<code>red</code>作为备用值</li></ul><blockquote><p>使用<code>fallback</code>,然而这可能导致性能问题(尽量避免)</p></blockquote><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">three</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">background-color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">var</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">--my-var</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">var</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">--my-background</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> pink</span><span style="color:#89DDFF;">));</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="var-非法值" tabindex="-1">var()非法值 <a class="header-anchor" href="#var-非法值" aria-label="Permalink to &quot;var()非法值&quot;">​</a></h3><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">body</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  --color</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">20px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">background-color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> pink</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">background-color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">var</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">--color</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">blue</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><ul><li>由于属性不合法.这时候背景色会被解析为当前css的<strong>初始值或者继承值(如果有继承性)</strong>,也就是按照<code>unset</code>关键字的规则渲染</li><li>由于上述的20px是非法值,这时候初始值就会被<code>transparent</code>代替</li></ul><h3 id="继承的特性" tabindex="-1">继承的特性 <a class="header-anchor" href="#继承的特性" aria-label="Permalink to &quot;继承的特性&quot;">​</a></h3><blockquote><p>css自定义属性本质上就是只能由元素或者后代元素使用的特性,本质上就是继承的特性</p></blockquote><ul><li>利用<code>var()</code>可以直接控制<a href="https://developer.mozilla.org/zh-CN/docs/Web/Web_Components/Using_shadow_DOM" target="_blank" rel="noreferrer"><code>Shadow DOM</code></a>样式的入口</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> shadow </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> button</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">attachShadow</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">mode</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">closed</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// Shadow DOM中的样式和按钮 </span></span>
<span class="line"><span style="color:#A6ACCD;">shadow</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">innerHTML </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">&lt;style&gt; </span></span>
<span class="line"><span style="color:#C3E88D;">button { padding: 9px 1em; </span></span>
<span class="line"><span style="color:#C3E88D;">border: var(--ui-button-border, 1px solid #ccc); </span></span>
<span class="line"><span style="color:#C3E88D;">border-radius: var(--ui-button-radius, 4px); </span></span>
<span class="line"><span style="color:#C3E88D;">background-color: var(--ui-button-background, #fff); </span></span>
<span class="line"><span style="color:#C3E88D;">color: var(--ui-button-color, #333);</span></span>
<span class="line"><span style="color:#C3E88D;">} &lt;/style&gt;</span></span>
<span class="line"><span style="color:#C3E88D;">&lt;button&gt;</span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">button</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">textContent</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">&lt;/button&gt;</span><span style="color:#89DDFF;">\`</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><ul><li>此时就可以i使用css自定义属性穿透<code>Shadow DOM</code></li></ul><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">ui-button</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">primary</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">按钮</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">ui-button</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">[</span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">parmary</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    --ui-button-border</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1px</span><span style="color:#A6ACCD;"> solid transparent</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    --ui-button-background</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> deepskyblue</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    --ui-button-color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">#</span><span style="color:#A6ACCD;">fff</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><h3 id="自定义属性的细节" tabindex="-1">自定义属性的细节 <a class="header-anchor" href="#自定义属性的细节" aria-label="Permalink to &quot;自定义属性的细节&quot;">​</a></h3><ol><li><p>在定义 css 属性的时候可以直接引入 css 自定义属性,也可以用在 <code>calc()</code> 函数中</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">body</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">  --green</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">#</span><span style="color:#A6ACCD;">4CAF50</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">  --successColor</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">var</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">--green</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">  --columns</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  --margins</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">calc</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">24px</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">var</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">--columns</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div></li><li><p>不能基于自身再次赋值.由于 <code>.some-class</code> 中的color计算值初始值,表现为上下文的颜色</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">root</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">  --primary-color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> deepskyblue</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">some-class</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">  --primary-color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">var</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">--primary-color</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">#</span><span style="color:#A6ACCD;">2a80eb</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#676E95;font-style:italic;">/* --primary-color会被认为是非法的，color的颜色为当前上下文的颜色 */</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">var</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">--primary-color</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div></li><li><p>不能使用于媒体查询.但是<code>env()</code>可以适用于媒体查询</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">root</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">  --maxWidth</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">640px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/* 不合法，语法无效 */</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">@media</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">max-width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> var(--maxWidth</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"></span></code></pre></div></li></ol><h3 id="使用javascript" tabindex="-1">使用JavaScript <a class="header-anchor" href="#使用javascript" aria-label="Permalink to &quot;使用JavaScript&quot;">​</a></h3><blockquote><p>在js中获取或者修改css变量喝操作普通css属性是一样的</p></blockquote><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> box </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">querySelector</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">.box</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">box</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">style</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setProperty</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">--bg-color</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">red</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">getComputedStyle</span><span style="color:#A6ACCD;">(box)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getPropertyValue</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">--bg-color</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">))</span><span style="color:#676E95;font-style:italic;">//red</span></span>
<span class="line"></span></code></pre></div><ul><li>如果不是自定义属性可以直接读取或者修改</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">box</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">style</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">width </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> 300px</span></span>
<span class="line"><span style="color:#82AAFF;">getComputedStyle</span><span style="color:#A6ACCD;">(box)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">width</span></span>
<span class="line"></span></code></pre></div><h2 id="env" tabindex="-1">env() <a class="header-anchor" href="#env" aria-label="Permalink to &quot;env()&quot;">​</a></h2><blockquote><p>env()函数类似于var()函数一样,将用户代理定义的环境变量插入设定的css中.并且此环境变量由用户的代理定义(用户屏幕上的可用空间),并且定义在全局作用域中(像var()一样)</p></blockquote><ul><li>env()函数可以让网页内容显示在安全区</li><li>必须在meta中设定:<code>viewport-fit=cover</code></li></ul><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">meta</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">viewport</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">content</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">width=device-width,viewport-fit=cover</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><ul><li><code>safe-area-inset-left</code>:安全区域距离左边边界距离</li><li><code>safe-area-inset-right</code>:安全区域距离右边边界距离</li><li><code>safe-area-inset-top</code>:安全区域距离顶部边界距离</li><li><code>safe-area-inset-bottom</code>:安全区域距离底部边界距离</li></ul><blockquote><p>这四个定义了视口边缘内矩形<code>top,right,bottom,left</code>距离非矩形边界的距离(<strong>默认值</strong>).</p></blockquote><ol><li><p>如果是矩形笔记本电脑或者显示器,其默认值就是0</p></li><li><p>如果是非矩形发显示器(圆形表盘,iphone屏幕等).那么默认值就是边界到可视内容的距离</p></li><li><p>注意:属性对大小写敏感.</p><ul><li><span style="color:red;">如果大写:SAFE-AREA-INSET-LEFT</span>,则无法识别</li></ul><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">/*一定会是50px*/</span></span>
<span class="line"><span style="color:#A6ACCD;">env(SAFE-AREA-INSET-LEFT</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">50px);</span></span>
<span class="line"></span></code></pre></div></li></ol><ul><li>语法定义:<code>env( &lt;custom-ident&gt; , &lt;declaration-value&gt;? )</code></li></ul><ol><li><p>第一种使用,直接使用用户设备自定义的默认值</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">env(</span><span style="color:#FFCB6B;">safe-area-inset-top</span><span style="color:#A6ACCD;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">env(</span><span style="color:#FFCB6B;">safe-area-inset-right</span><span style="color:#A6ACCD;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">env(</span><span style="color:#FFCB6B;">safe-area-inset-bottom</span><span style="color:#A6ACCD;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">env(</span><span style="color:#FFCB6B;">safe-area-inset-left</span><span style="color:#A6ACCD;">);</span></span>
<span class="line"></span></code></pre></div></li><li><p>使用自定义的备用值</p><ul><li>如果环境变量不可用,就可以设置备用值来解决这种问题</li></ul><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">env(</span><span style="color:#FFCB6B;">safe-area-inset-top</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 20px);</span></span>
<span class="line"><span style="color:#A6ACCD;">env(</span><span style="color:#FFCB6B;">safe-area-inset-right</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 1em);</span></span>
<span class="line"><span style="color:#A6ACCD;">env(</span><span style="color:#FFCB6B;">safe-area-inset-bottom</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 0</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">5vh</span><span style="color:#A6ACCD;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">env(</span><span style="color:#FFCB6B;">safe-area-inset-left</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 1</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">4rem</span><span style="color:#A6ACCD;">);</span></span>
<span class="line"></span></code></pre></div></li></ol><blockquote><p>由于设定了环境变量,我们可以在任意一个地方使用他</p></blockquote><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">body</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">/* 将元素底部增加安全区的大小,防止遮罩 */</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">padding-bottom</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> env(safe-area-inset-bottom)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="全局关键字" tabindex="-1">全局关键字 <a class="header-anchor" href="#全局关键字" aria-label="Permalink to &quot;全局关键字&quot;">​</a></h2><blockquote><p>css中<code>inherit</code>,<code>initial</code>,<code>unset</code>,<code>revert</code>是全局关键字属性,也就是css可以使用这几个关键字作为属性值</p></blockquote><h3 id="inherit-继承" tabindex="-1">inherit(继承) <a class="header-anchor" href="#inherit-继承" aria-label="Permalink to &quot;inherit(继承)&quot;">​</a></h3><blockquote><p>inherit是继承的意思,是全局关键字中最使用的一个</p></blockquote><ul><li>可以使用<code>inherit</code>关键字重置输入框的内置字体,使用父元素的内置字体</li></ul><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">input</span><span style="color:#89DDFF;">,</span><span style="color:#FFCB6B;">textarea</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">font-family</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">inherit</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><ul><li>像子元素设置<code>height:inherit</code>实现继承高度.<code>background-image:inherit</code>实现背景图像的继承</li></ul><h3 id="initial-初始值" tabindex="-1">initial(初始值) <a class="header-anchor" href="#initial-初始值" aria-label="Permalink to &quot;initial(初始值)&quot;">​</a></h3><blockquote><p>initial可以将css属性的计算值还原成css语法规定的初始值</p></blockquote><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">body</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">style</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">color: red;</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  这不对劲</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">style</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">color: initial;</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">你好啊</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><ul><li>initial适合用在需要重置某些css样式的场景,但又不记得初始值</li><li>注意:initial关键字并不是浏览器设置的元素的初始值(恢复li的小圆点<code>list-style-type</code>会失效)</li></ul><h3 id="unset" tabindex="-1">unset <a class="header-anchor" href="#unset" aria-label="Permalink to &quot;unset&quot;">​</a></h3><blockquote><p><code>unset</code>是不固定值关键字</p></blockquote><ul><li><p>如果当前使用的css属性具有继承性,例如color属性,则等同于使用<code>inherit</code>关键字</p></li><li><p>如果当前使用的css属性没有继承性,如<code>background-color</code>,则等同于使用<code>initial</code>关键字</p></li><li><p><span style="color:red;">当然这个属性只有配合使用all属性才有意义</span></p></li><li><p>当然,如果完全没有用unset的理由.继承(inherit)或者使用初始值(initial)</p></li></ul><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">input</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">all</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">unset</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="revert" tabindex="-1">revert <a class="header-anchor" href="#revert" aria-label="Permalink to &quot;revert&quot;">​</a></h3><blockquote><p><code>revert</code>关键字可以让当前元素的样式还原成浏览器内置的样式</p></blockquote><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">ol</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">padding</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">revert</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">list-style-type</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">revert</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><ul><li>其中每一个li都会呈现数字效果(当然,没有必要做这种样式重置的工作)</li></ul><h3 id="all" tabindex="-1">all <a class="header-anchor" href="#all" aria-label="Permalink to &quot;all&quot;">​</a></h3><blockquote><p>all属性可以重置除<code>unicode-bidi</code>,<code>direction</code>以及css自定义属性外的所有css属性</p></blockquote><ul><li>语法:<code>all: initial | inherit | unset | revert;</code></li></ul><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">input</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">all</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">unset</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><ul><li>该段代码表示input中所欲css属性都会使用<code>inherit</code>关键字作为属性值</li><li><code>all:inherit</code>和<code>all:initial</code>没有任何语法价值</li><li><code>all:unset</code>可以是任意一个元素表现和&lt;span&gt;元素一样.</li><li><code>all:revert</code>可以让元素恢复成浏览器默认的样式</li></ul><h2 id="supports" tabindex="-1">@supports <a class="header-anchor" href="#supports" aria-label="Permalink to &quot;@supports&quot;">​</a></h2><blockquote><p>@supports可以用来检测当前浏览器是否支持某一个css新属性</p></blockquote><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">@supports</span><span style="color:#89DDFF;">(</span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> flex</span><span style="color:#89DDFF;">){</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">item</span><span style="color:#89DDFF;">{</span><span style="color:#B2CCD6;">flex</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><ul><li>以上代码的意思是:如果浏览器支持<code>display:flex</code>,则匹配<code>.item</code>类型的元素就设置为<code>flex:1</code></li></ul><blockquote><p>并且@supports还支持使用操作符判断,这些操作符是<code>not</code>,<code>and</code>和<code>or</code>.</p></blockquote><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">/* 支持弹性布局 */</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">@supports</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">flex</span><span style="color:#89DDFF;">){}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/* 不支持弹性布局 */</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">@supports</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">not</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">flex</span><span style="color:#89DDFF;">){}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/* 同时支持弹性布局和网格布局 */</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">@supports</span><span style="color:#89DDFF;">(</span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">flex</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">and</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">grid</span><span style="color:#89DDFF;">){}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/* 支持弹性布局或者网格布局 */</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">@supports</span><span style="color:#89DDFF;">(</span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">flex</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">or</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">grid</span><span style="color:#89DDFF;">){}</span></span>
<span class="line"></span></code></pre></div><ul><li>并且可以使用连续多个以上的声明</li></ul><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">@supports</span><span style="color:#89DDFF;">(</span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">flex</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">or</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">grid</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">or</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#B2CCD6;">gap</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">){}</span></span>
<span class="line"></span></code></pre></div><ul><li>可以使用递归的形式.把原来@supports规则的复杂条件判断就是把合法的逻辑语句放在括号里不断嵌套</li></ul><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">/* 支持flex布局,不支持grid布局的语法 */</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">@supports</span><span style="color:#89DDFF;">(</span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> flex</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">and</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(not</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> grid</span><span style="color:#89DDFF;">)){}</span></span>
<span class="line"></span></code></pre></div><blockquote><p>javascript中检测浏览器是否支持某个CSS属性</p></blockquote><ul><li><code>CSS.supports(propertyName, value);</code><ul><li><strong>propertyName</strong>:包含要检查的 CSS 属性的名称的 DOMString.</li><li><strong>value</strong>:包含要检查的 CSS 属性的值的 DOMString</li></ul></li><li><code>CSS.supports(supportCondition);</code><ul><li>包含要检查的条件的 DOMString</li></ul></li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">CSS</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">supports</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">display:flex</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">CSS</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">supports</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">display</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">flex</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><h2 id="与calc-相关的函数" tabindex="-1">与calc()相关的函数 <a class="header-anchor" href="#与calc-相关的函数" aria-label="Permalink to &quot;与calc()相关的函数&quot;">​</a></h2><h3 id="calc" tabindex="-1">calc() <a class="header-anchor" href="#calc" aria-label="Permalink to &quot;calc()&quot;">​</a></h3><blockquote><p>calc()支持加减乘除四种运算,任何可以使用&lt;length&gt;,&lt;frequency&gt;,&lt;angle&gt;,&lt;item&gt;,&lt;percentage&gt;,&lt;number&gt;或者&lt;integer&gt;数据类型的地方可以使用calc()函数</p></blockquote><ol><li><p>不能使用css不支持的数据类型</p></li><li><p>不能再css前后都带单位或者白粉后的值进行乘除运算,只能进行加减运算</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">&lt;!-- 不合法 --</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">width:calc(10px </span><span style="color:#FFCB6B;">*</span><span style="color:#A6ACCD;"> 10px);</span></span>
<span class="line"><span style="color:#A6ACCD;">width:calc(90% - 1rem);</span></span>
<span class="line"></span></code></pre></div></li><li><p>除法运算右侧必须是不为0的数</p></li><li><p>clac()运算符的<strong>加号/减号</strong>左右两边一定要有空格</p></li><li><p>calc()可以支持嵌套使用</p></li></ol><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">list</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  --size</span><span style="color:#89DDFF;">:</span><span style="color:#82AAFF;">calc</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">100%</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2rem</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">width</span><span style="color:#89DDFF;">:</span><span style="color:#82AAFF;">calc</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">var</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">--size</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">6</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="min-max-和clamp-函数" tabindex="-1">min(),max()和clamp()函数 <a class="header-anchor" href="#min-max-和clamp-函数" aria-label="Permalink to &quot;min(),max()和clamp()函数&quot;">​</a></h3><blockquote><p>和calc()类似,任何可以使用&lt;length&gt;,&lt;frequency&gt;,&lt;angle&gt;,&lt;item&gt;,&lt;percentage&gt;,&lt;number&gt;或者&lt;integer&gt;数据类型的地方可以使用这三个函数</p></blockquote><ul><li>min(),max()和clamp()可以和calc()嵌套使用</li></ul><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">width:calc(min(800px</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">100vw) / 6);</span></span>
<span class="line"></span></code></pre></div><blockquote><p>min()函数:<code>min(expression[,expression])</code></p></blockquote><ul><li><p><code>min()</code>函数支持一个或者多个表达式,每个表达式之间使用逗号分割,然后将最小的表达式的值最为返回值</p></li><li><p>虽然函数的名称是min(),但是实际上是用来限制最大的.例如以下,只要视口宽度小于800px或者字体大小小于16px,就会返回比80px更小的值</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">width:min(10vw</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">5em</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">80px)</span></span>
<span class="line"></span></code></pre></div></li><li><p>min()函数中使用算数运算符,具体的值或者其它的表达式</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">width:min(10px </span><span style="color:#FFCB6B;">*</span><span style="color:#A6ACCD;"> 10</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 10em)</span></span>
<span class="line"><span style="color:#A6ACCD;">width:min(calc(10px </span><span style="color:#FFCB6B;">*</span><span style="color:#A6ACCD;"> 10), 10em)</span></span>
<span class="line"><span style="color:#A6ACCD;">width:min(calc(10px </span><span style="color:#FFCB6B;">*</span><span style="color:#A6ACCD;"> 10), var(--width))</span></span>
<span class="line"></span></code></pre></div></li><li><p>例如在网页端浏览器宽度为<code>1024px</code>,在移动端宽度为<code>100%</code></p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">&lt;!-- 过去 --</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">constr</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">width</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">1024px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">max-width</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">100%</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">&lt;!-- 现在 --</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">constr</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">width</span><span style="color:#89DDFF;">:</span><span style="color:#82AAFF;">min</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">100%</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">1024px</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div></li></ul><blockquote><p>max()函数:和min()的区别是返回最大值</p></blockquote><ul><li><p>max()函数实际作用就是限制最小值.他返回的不会比80px更小</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">width:max(10vw</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">5em</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">80px)</span></span>
<span class="line"></span></code></pre></div></li></ul><blockquote><p>clamp()函数返回一个区间范围的值</p></blockquote><ul><li>语法:<code>clamp(MIN,VALUE,MAX)</code>.MIN表示最小值,VALUE表示首选值,MAX表示最大值 <ul><li>如果VALUE在MIN~MAX范围内,则使用VALUE作为函数返回值.</li><li>如果VALUE大于MAX,则使用MAX作为返回值</li><li>如果VALUE小于MIN,则使用MIN作为返回值</li></ul></li><li><code>clamp(MIN,VALUE,MAX)</code>实际上等同于<code>max(MIN,min(VALUE,MAX))</code></li></ul>`,93),e=[o];function t(c,r,i,D,y,F){return l(),a("div",null,e)}const d=s(p,[["render",t]]);export{A as __pageData,d as default};
