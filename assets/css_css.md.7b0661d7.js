import{_ as n,c as o,o as e,N as a,x as s,a as l}from"./chunks/framework.8361052b.js";const p="/CSS/assets/baseline.afa5ec8b.png",t="/CSS/assets/middle.55a2eeae.jpg",c="/CSS/assets/text-top.7ca515e0.jpg",q=JSON.parse('{"title":"CSS","description":"","frontmatter":{},"headers":[],"relativePath":"css/css.md"}'),r={name:"css/css.md"},i=a('<h1 id="css" tabindex="-1">CSS <a class="header-anchor" href="#css" aria-label="Permalink to &quot;CSS&quot;">​</a></h1><h2 id="css-基础" tabindex="-1">css 基础 <a class="header-anchor" href="#css-基础" aria-label="Permalink to &quot;css 基础&quot;">​</a></h2><table><thead><tr><th>布局方式</th><th>描述</th><th>特点</th><th>场景</th></tr></thead><tbody><tr><td>静态布局</td><td>Static Layout，传统 Web 设计，网页上的所有元素的尺寸一律使用 px 作为单位。不管浏览器尺寸具体是多少，网页布局始终按照最初写代码时的布局来显示。一般需要设置最小宽度</td><td>不能根据用户的屏幕尺寸做出不同的表现</td><td>传统PC网页</td></tr><tr><td>流式布局</td><td>Liquid Layout，页面元素的宽度按照屏幕分辨率进行适配调整，但整体布局不变。代表作栅栏系统（网格系统）</td><td>网页中主要的划分区域的尺寸使用百分数（搭配 <code>min-</code>、<code>max-</code> 属性使用）</td><td>屏幕分辨率变化时，页面里元素的大小会变化而但布局不变</td></tr><tr><td>自适应布局</td><td>Adaptive Layout，使用 <code>@media</code> 分别为不同的屏幕分辨率定义布局，即创建多个静态布局，每个静态布局对应一个屏幕分辨率范围</td><td>屏幕分辨率变化时，页面里面元素的位置会变化而大小不会变化</td><td>-</td></tr><tr><td>响应式布局</td><td>Responsive Layout，一个页面在所有终端上（各种尺寸的 PC、手机、手表、冰箱的 Web 浏览器等等）都能显示出令人满意的效果</td><td>每个屏幕分辨率下面会有一个布局样式，即元素位置和大小都会变</td><td>多终端页面</td></tr><tr><td>弹性布局</td><td>rem/em 布局，包裹文字的各元素的尺寸采用 em/rem 做单位，而页面的主要划分区域的尺寸仍使用百分数或 px 做单位</td><td>理想状态是所有屏幕的高宽比和最初的设计高宽比一样，或者相差不多，完美适应</td><td>移动端</td></tr></tbody></table><ul><li><strong>流体布局</strong>：指的是利用元素“流”的特性实现的各类布局效果。因为<strong>流</strong>本身具有自适应特性，所以“流体布局”往往都是具有自适应性的。但是，<strong>流体布局</strong>并不等同于<strong>自适应布局</strong>。</li><li><strong>自适应布局</strong>：是对凡是具有自适应特性的一类布局的统称，“流体布局”要狭窄得多。例如，表格布局也可以设置为 <code>100%</code> 自适应，但表格和“流”不一样，并不属于“流体布局”。通俗的说，流体布局就是在 <code>width:auto</code> 或者格式化宽/高中，通过设定 <code>margin/border/padding</code> 来影响 content 的布局的方式</li></ul><h3 id="css-的引入样式" tabindex="-1">css 的引入样式 <a class="header-anchor" href="#css-的引入样式" aria-label="Permalink to &quot;css 的引入样式&quot;">​</a></h3><ol><li>内部样式表：将代码写在 <code>&lt;style&gt;&lt;/style&gt;</code> 中</li><li>行内样式表：<code>&lt;div style=&quot;color:red&quot;&gt;你好&lt;/style&gt;</code></li><li>外部样式表：<code>&lt;link ref=&quot;stylesheet&quot; href=&quot;路径&quot;&gt;</code></li></ol><h3 id="width-auto" tabindex="-1">width:auto <a class="header-anchor" href="#width-auto" aria-label="Permalink to &quot;width:auto&quot;">​</a></h3><ol><li><strong>充分利用空间</strong>，块级元素的默认宽度使父级元素宽度的 <code>100%</code></li><li><strong>收缩与包裹</strong>，当元素处于浮动，绝对定位或者为内敛块元素或 table 元素，父级元素失去原有的宽度收缩到与内部元素一样</li><li><strong>收缩到最小</strong>，这个容易出现在 table-layout 为 auto 的表格中，为了超过父级元素的宽度</li><li><strong>超出容器限制</strong>，除非有明确的 width 相关设置，否则上面三种情况都不会超过父级的容器宽度（如果设置很长的英文，或者 <code>white-space:nowrap</code>）</li></ol><h4 id="外部尺寸与流体特性" tabindex="-1">外部尺寸与流体特性 <a class="header-anchor" href="#外部尺寸与流体特性" aria-label="Permalink to &quot;外部尺寸与流体特性&quot;">​</a></h4>',9),D=s("ol",null,[s("li",null,[s("p",null,[l("正常流宽度默认是 "),s("code",null,"100%")]),s("ul",null,[s("li",null,"在页面中随便扔一个 div 元素，其尺寸表现就会和水流一样铺满容器。这就 是block 容器的流特性。"),s("li",null,[l("所谓流动性是一种根据 "),s("code",null,"margin/border/padding/content"),l(" 属性对其内容区域自动分配水平空间的机制")])]),s("iframe",{height:"300",style:{width:"100%"},scrolling:"no",title:"Untitled",src:"https://codepen.io/jack-zhang-1314/embed/WNXmWdJ?default-tab=html%2Cresult",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"},`
  See the Pen <a href="https://codepen.io/jack-zhang-1314/pen/WNXmWdJ">
  Untitled</a> by Jack-Zhang-1314 (<a href="https://codepen.io/jack-zhang-1314">@jack-zhang-1314</a>)
  on <a href="https://codepen.io">CodePen</a>.
`)]),s("li",null,[s("p",null,"格式化宽度"),s("ul",null,[s("li",null,[l("格式化宽度仅出现在"),s("strong",null,"绝对定位模型"),l("中，也就是出现在 position 属性值为 absolute 和 fixed 的元素中，在预设情况下绝对定位元素的宽度表现是"),s("strong",null,"包裹性"),l('，"宽度由内部尺寸决定"，但是有一中情况下由外部尺寸决定。')]),s("li",null,"在 CSS 中，可替换元素（replaced element）的展现效果不是由 CSS 来控制的。这些元素是一种外部对象，它们外观的渲染，是独立于 CSS 的。典型的可替换元素有：<iframe>、<video>、<embed>、<img>"),s("li",null,"对于非替换元素，当 left/right 或 top/bottom 对立方位的属性值同时存在的时候，元素的宽度表现为“格式化宽度”，其宽度大小相对于最近的具有定位特性（position 属性值不是 static）的祖先元素计算")]),s("div",{class:"language-html"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"html"),s("pre",{class:"shiki material-theme-palenight"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#89DDFF"}},"<"),s("span",{style:{color:"#F07178"}},"style"),s("span",{style:{color:"#89DDFF"}},">")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#89DDFF"}},"."),s("span",{style:{color:"#FFCB6B"}},"father"),s("span",{style:{color:"#A6ACCD"}}," "),s("span",{style:{color:"#89DDFF"}},"{")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"   "),s("span",{style:{color:"#B2CCD6"}},"position"),s("span",{style:{color:"#89DDFF"}},":"),s("span",{style:{color:"#A6ACCD"}}," relative"),s("span",{style:{color:"#89DDFF"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"   "),s("span",{style:{color:"#B2CCD6"}},"width"),s("span",{style:{color:"#89DDFF"}},":"),s("span",{style:{color:"#A6ACCD"}}," "),s("span",{style:{color:"#F78C6C"}},"300px"),s("span",{style:{color:"#89DDFF"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"   "),s("span",{style:{color:"#B2CCD6"}},"height"),s("span",{style:{color:"#89DDFF"}},":"),s("span",{style:{color:"#A6ACCD"}}," "),s("span",{style:{color:"#F78C6C"}},"150px"),s("span",{style:{color:"#89DDFF"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"   "),s("span",{style:{color:"#B2CCD6"}},"border"),s("span",{style:{color:"#89DDFF"}},":"),s("span",{style:{color:"#A6ACCD"}}," "),s("span",{style:{color:"#F78C6C"}},"1px"),s("span",{style:{color:"#A6ACCD"}}," solid saddlebrown"),s("span",{style:{color:"#89DDFF"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}}," "),s("span",{style:{color:"#89DDFF"}},"}")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}}," "),s("span",{style:{color:"#89DDFF"}},"."),s("span",{style:{color:"#FFCB6B"}},"father"),s("span",{style:{color:"#A6ACCD"}}," "),s("span",{style:{color:"#89DDFF"}},">"),s("span",{style:{color:"#A6ACCD"}}," "),s("span",{style:{color:"#89DDFF"}},"."),s("span",{style:{color:"#FFCB6B"}},"son"),s("span",{style:{color:"#A6ACCD"}}," "),s("span",{style:{color:"#89DDFF"}},"{")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"   "),s("span",{style:{color:"#B2CCD6"}},"position"),s("span",{style:{color:"#89DDFF"}},":"),s("span",{style:{color:"#A6ACCD"}}," absolute"),s("span",{style:{color:"#89DDFF"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"   "),s("span",{style:{color:"#B2CCD6"}},"top"),s("span",{style:{color:"#89DDFF"}},":"),s("span",{style:{color:"#A6ACCD"}}," "),s("span",{style:{color:"#F78C6C"}},"0px"),s("span",{style:{color:"#89DDFF"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"   "),s("span",{style:{color:"#B2CCD6"}},"right"),s("span",{style:{color:"#89DDFF"}},":"),s("span",{style:{color:"#A6ACCD"}}," "),s("span",{style:{color:"#F78C6C"}},"0px"),s("span",{style:{color:"#89DDFF"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"   "),s("span",{style:{color:"#B2CCD6"}},"bottom"),s("span",{style:{color:"#89DDFF"}},":"),s("span",{style:{color:"#A6ACCD"}}," "),s("span",{style:{color:"#F78C6C"}},"0px"),s("span",{style:{color:"#89DDFF"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"   "),s("span",{style:{color:"#B2CCD6"}},"left"),s("span",{style:{color:"#89DDFF"}},":"),s("span",{style:{color:"#A6ACCD"}}," "),s("span",{style:{color:"#F78C6C"}},"0px"),s("span",{style:{color:"#89DDFF"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"   "),s("span",{style:{color:"#B2CCD6"}},"margin"),s("span",{style:{color:"#89DDFF"}},":"),s("span",{style:{color:"#A6ACCD"}}," auto"),s("span",{style:{color:"#89DDFF"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"   "),s("span",{style:{color:"#B2CCD6"}},"width"),s("span",{style:{color:"#89DDFF"}},":"),s("span",{style:{color:"#A6ACCD"}}," "),s("span",{style:{color:"#F78C6C"}},"100px"),s("span",{style:{color:"#89DDFF"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"   "),s("span",{style:{color:"#B2CCD6"}},"height"),s("span",{style:{color:"#89DDFF"}},":"),s("span",{style:{color:"#A6ACCD"}}," "),s("span",{style:{color:"#F78C6C"}},"50px"),s("span",{style:{color:"#89DDFF"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"   "),s("span",{style:{color:"#B2CCD6"}},"border"),s("span",{style:{color:"#89DDFF"}},":"),s("span",{style:{color:"#A6ACCD"}}," "),s("span",{style:{color:"#F78C6C"}},"1px"),s("span",{style:{color:"#A6ACCD"}}," solid salmon"),s("span",{style:{color:"#89DDFF"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}}," "),s("span",{style:{color:"#89DDFF"}},"}")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#89DDFF"}},"</"),s("span",{style:{color:"#F07178"}},"style"),s("span",{style:{color:"#89DDFF"}},">")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#89DDFF"}},"<"),s("span",{style:{color:"#F07178"}},"div"),s("span",{style:{color:"#89DDFF"}}," "),s("span",{style:{color:"#C792EA"}},"class"),s("span",{style:{color:"#89DDFF"}},"="),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#C3E88D"}},"father"),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#89DDFF"}},">")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#A6ACCD"}},"  "),s("span",{style:{color:"#89DDFF"}},"<"),s("span",{style:{color:"#F07178"}},"div"),s("span",{style:{color:"#89DDFF"}}," "),s("span",{style:{color:"#C792EA"}},"class"),s("span",{style:{color:"#89DDFF"}},"="),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#C3E88D"}},"son"),s("span",{style:{color:"#89DDFF"}},'"'),s("span",{style:{color:"#89DDFF"}},"></"),s("span",{style:{color:"#F07178"}},"div"),s("span",{style:{color:"#89DDFF"}},">")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#89DDFF"}},"</"),s("span",{style:{color:"#F07178"}},"div"),s("span",{style:{color:"#89DDFF"}},">")]),l(`
`),s("span",{class:"line"})])])])])],-1),F=a(`<h4 id="内部尺寸与流体特性" tabindex="-1">内部尺寸与流体特性 <a class="header-anchor" href="#内部尺寸与流体特性" aria-label="Permalink to &quot;内部尺寸与流体特性&quot;">​</a></h4><blockquote><p>所谓“内部尺寸”，简单来讲就是元素的尺寸由内部的元素决定，而非由外部的容器决定。</p></blockquote><ol><li><strong>包裹性</strong><ul><li><strong>包裹性</strong>除了“包裹”，还有“自适应性”。所谓“自适应性”指的是元素尺寸由内部元素决定，但永远小于“包含块”容器的尺寸（除非容器尺寸小于元素的“首选最小宽度”）。</li><li>按钮就是 css 中极具代表性的 <code>inline-block</code> 元素，可谓展示“包裹性”最好的例子，具体表现为：按钮文字越多宽度越宽（内部尺寸特性），但如果文字足够多，则会在容器的宽度处自动换行（自适应性）</li></ul></li><li>首选最小宽度 <ul><li>图片和文字的权重要远大于布局，当布局中存在更高权重元素时（如 <code>width:0</code> 不生效）最小宽度受其内容影响（文字中的最小宽度为单个字符宽度）</li><li><code>word-break: break-all</code>：break-all 对于 non-CJK（CJK 指中文/日文/韩文）文本，可在任意字符间断行。</li></ul></li><li>最大宽度 <ul><li><code>white-space</code> CSS 属性是用来设置如何处理元素中的空白。</li><li>最大宽度就是元素可以有的最大宽度。“最大宽度”实际等同于“包裹性”元素设置 <code>white-space: nowrap</code> 声明后的宽度。（<em>连续的空白符会被合并，但文本内的换行无效</em>）如果内部没有块级元素或者块级元素没有设定宽度值，则“最大宽度”实际上是最大的连续内联盒子的宽度。</li></ul></li></ol><h4 id="css-流体布局下的宽度分离原则" tabindex="-1">CSS 流体布局下的宽度分离原则 <a class="header-anchor" href="#css-流体布局下的宽度分离原则" aria-label="Permalink to &quot;CSS 流体布局下的宽度分离原则&quot;">​</a></h4><blockquote><p>所谓“宽度分离原则”就是 css 中的 width 属性不与影响宽度的 padding/border（有时候包括 margin）属性共存，通过设置 padding、margin、border 内部内容通过 <code>width：auto</code> 自动填充</p></blockquote><h4 id="min-width-max-width和min-height-max-height" tabindex="-1">min-width/max-width和min-height/max-height <a class="header-anchor" href="#min-width-max-width和min-height-max-height" aria-label="Permalink to &quot;min-width/max-width和min-height/max-height&quot;">​</a></h4><blockquote><p>为流体而生的 min-width/max-width</p></blockquote><ul><li>比如，网页宽度在 1200～1400 像素自适应，既满足大屏的大气又满足笔记本的良好显示，此时 <code>min-width/max-width</code> 就可以大显神威了</li></ul><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">container</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">min-width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1200px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">max-width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1400px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><ul><li>公众号的热门文章中，经常会有图片，这些图片都是用户上传产生的，因此尺寸会有大有小，为了避免图片在移动端展示过大的影响体验，常常会有下面的 <code>max-width</code>（百分比是相对于父容器的）限制</li></ul><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">img</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">max-width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100%</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> auto</span><span style="color:#F78C6C;">!important</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><ul><li>原始图片有设定 <code>height</code>、<code>max-widht</code> 生效的时候图片就会被水平压缩。强制 <code>height:auto</code> 可以确保宽度不超出的同时使图片保持原来的比例。但这样也会有体验上的问题，那就是在加载时图片占据高度会从 0 变成计算高度，图文会有明显的瀑布式下落</li></ul><blockquote><p>不同的初始值:<code>min-weidht</code>/<code>min-height</code> 的初始值是 auto，<code>max-width</code>/<code>max-height</code> 的初始值是 none</p></blockquote><ul><li>超越 <code>!important</code>，超越最大。超越 <code>!important</code> 指的是 <code>max-width</code> 会覆盖 <code>width</code></li><li>比方说，针对下面的 HTML 和 CSS 设置，图片最后呈现的宽度是多少？</li></ul><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">img</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">scr</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1.jpg</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">style</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">width: 480px!important;</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">/&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#FFCB6B;">img</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">max-width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">256px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><ul><li><p>答案是 <code>256px</code>。<code>style</code>、<code>!important</code> 通通靠边站！因为 <code>max-width</code> 会覆盖 <code>width</code></p></li><li><p>超越最大指的是 <code>min-width</code> 的值大于 <code>max-width</code> 值时取 <code>min-width</code> 的值超越最大值得是 <code>min-width</code> 覆盖 <code>max-width</code>，此规则发生在 <code>min-width</code> 和 <code>max-width</code> 冲突时。</p></li></ul><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">container</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">min-width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1400px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">max-width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1200px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><ul><li>最小宽度比最大宽度设置得还要大，遵循“超越最大”规则（注意不是“后台者居上”规则）值取 <code>min-width</code>、<code>max-width</code> 被忽略，于是，<code>.container</code> 元素表现为至少1400像素宽</li></ul><blockquote><p>优先写问题</p></blockquote><ul><li><code>max-height/width</code> &lt; <code>height/width</code> =&gt; <code>max-height/width</code> 重载 <code>height/width</code></li><li><code>min-height/width</code> &gt; <code>height/width</code> =&gt; <code>min-height/width</code> 重载 <code>height/width</code></li><li><code>min-height/width</code> &gt; <code>max-height/width</code> =&gt; <code>min-height/width</code> 重载 <code>max-height/width</code></li></ul><h4 id="width-fit-content" tabindex="-1">width:fit-content <a class="header-anchor" href="#width-fit-content" aria-label="Permalink to &quot;width:fit-content&quot;">​</a></h4><blockquote><p><code>fit-content</code> 的样式表现形式就是 css2。1 的<code>shrink-to-fit</code>（包裹性）。这种表现和元素应用于 <code>display:inline-block</code>、<code>position:absolut</code> 等 css 声明类似，尺寸收缩但不会包含块级元素的尺寸限制</p></blockquote><ol><li><code>fit-content</code> 会让元素的尺寸有确定的值（关键）</li><li><code>min-width</code> 属性和 <code>max-width</code> 会正确渲染 <code>fit-content</code> 关键字。但是 <code>max-height</code> 和 <code>min-height</code> 属性设置 <code>fit-content</code> 关键字虽然语法正确，但是不会有任何表现形式。</li></ol><blockquote><p>width: stretch | available | fill-available</p></blockquote><ul><li><code>stretch</code>:弹性拉伸，用于替换之前的 <code>available</code>，<code>fill-available</code><ul><li>一般 <code>block</code> 是<strong>弹性布局</strong>或者<strong>网格布局</strong>自动会默认自带这种弹性拉伸</li></ul></li><li><code>available</code>：可用空间。Firefox 使用的关键字</li><li><code>fill-available</code>：填充可用空间。Webkit 浏览器使用的关键字</li></ul><blockquote><p><code>max-content</code> 关键字表示最大内容宽度，作用是让元素尽可能的大</p></blockquote><ol><li>各项宽度不确定，整体宽度自适应</li><li>当前项的内容较少</li><li>当前项的宽度需要尽可能的小</li></ol><ul><li>表格布局，弹性布局和网格布局都可以满足以上效果，这些布局自带与内容相关的尺寸规则。<span style="color:red;">给子项设置 <code>width:max-content</code> 是没有任何效果的</span></li><li>当然 <code>max-content</code> 和 <code>min-content</code> 一样有兼容问题</li></ul><h3 id="height-auto" tabindex="-1">height:auto <a class="header-anchor" href="#height-auto" aria-label="Permalink to &quot;height:auto&quot;">​</a></h3><blockquote><p>关于 <code>height:100%</code> 无效</p></blockquote><ul><li>height 和 width 还有一个比较明显的区别就是对百分比单位的支持。对于 width 属性，就算父元素 <code>width:auto</code>，其百分比也是支持的；但是，对于 height 属性，如果父元素 height 为 auto，只要子元素在文档流中，其百分比值完全就被忽略了。</li></ul><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">div</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100%</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">/* 这是多余的 */</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100%</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">/* 这是无效的 */</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">background</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">url</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">bg.jpg</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><blockquote><p>要明白其中的原因要先了解浏览器渲染的基本原理。首先，先下载文档内容，加载头部样式资源（如果有的话），然后按照从上而下、自外而内的顺序渲染 DOM 内容。套用本例就是，先渲染父级元素，后渲染子元素，是有先后顺序的。因此，当渲染到父元素的时候，子元素的 width:100% 并没有渲染，宽度就是图片加文字内容的宽度;等渲染到文字这个元素的时候，父元素的宽度已经固定，此时的 width:100% 就是已经固定好的父元素的宽度。宽度不够怎么办？溢出就好了，overflow 属性就是为此而生的</p></blockquote><ul><li>由于没有显示定义height，就将height解释成字符串 <code>auto</code>=&gt;<code>&#39;auto&#39; * 100/100 = NaN</code></li></ul><blockquote><p>设置显示的高度（或者也可以使用绝对定位）</p></blockquote><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">html</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">body</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100%</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h4 id="任意高度元素的展开收起动画技术" tabindex="-1">任意高度元素的展开收起动画技术 <a class="header-anchor" href="#任意高度元素的展开收起动画技术" aria-label="Permalink to &quot;任意高度元素的展开收起动画技术&quot;">​</a></h4><blockquote><p>第一反应就是使用 <code>height + overflow:hidden</code> 实现，但是，很多时候我们展开的元素内容是动态的，换句话说高度不是固定的，因此，height 使用的值是默认的 auto，应该都知道的 auto 是个关键字值，并非数值，正如 height: 100% 的 100% 无法和 auto 相计算一样，从 0px 到 auto 是无法计算的，因此无法形成过渡或动画效果</p></blockquote><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">/* 因此，下面代码呈现的效果也是生硬的展开和收起 */</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">element</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">overflow</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> hidden</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">transition</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> height </span><span style="color:#F78C6C;">.25s</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">element</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">active</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> auto</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">/* 没有transition效果,只是生硬的展开 */</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/* 难道就没有什么一劳永逸的实现方法吗？有,不妨试试max-height */</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">element</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">max-height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">overflow</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> hidden</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">transition</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> max-height </span><span style="color:#F78C6C;">.25s</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">element</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">active</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">max-height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">666px</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">/* 一个足够大的高度值 */</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><blockquote><p>其中展开后的 <code>max-height</code> 值，我们只需要设定为保证比展开内容高度大的值就可以，因为 <code>max-height</code> 值比 <code>height</code> 计算值大的时候，元素的高度就是 <code>height</code> 属性的计算高度，在本交互中，也就是 <code>height: auto</code> 时候的高度值。于是，一个高度不定的任意元素的展开动画就实现了</p></blockquote><ul><li><p>但是，使用此方法也有一点要注意，既虽然从适用范围讲，<code>max-height</code> 值越大使用场景越多，但是，如果 <code>max-height</code> 值太大，在收起的时候可能会有“效果延迟”的问题。比方说，展开的元素高度是 <code>100px</code>，而 <code>max-height</code> 是 <code>1000px</code>，动画时间是 <code>250ms</code>，假设动画函数是线性的，则前 <code>255ms</code> 我们是看不到收起效果的，因为 <code>max-height</code> 从 <code>1000</code> 像素到 <code>100</code> 像素变化这段时间，元素不会有区域被隐藏，会给人动画延迟 225ms 的感觉</p></li><li><p>因此，建议 <code>max-height</code> 使用足够安全的最小值，这样，收起时即使有延迟效果，也会因为时间很短，很难给用户察觉，并不会影响体验</p></li></ul><h2 id="盒子模型" tabindex="-1">盒子模型 <a class="header-anchor" href="#盒子模型" aria-label="Permalink to &quot;盒子模型&quot;">​</a></h2><h3 id="内容-content" tabindex="-1">内容（content） <a class="header-anchor" href="#内容-content" aria-label="Permalink to &quot;内容（content）&quot;">​</a></h3><h4 id="替换元素" tabindex="-1"><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/Replaced_element" target="_blank" rel="noreferrer">替换元素</a> <a class="header-anchor" href="#替换元素" aria-label="Permalink to &quot;[替换元素](https://developer.mozilla.org/en-US/docs/Web/CSS/Replaced_element)&quot;">​</a></h4><blockquote><p>替换元素：通过修改某个属性值呈现的内容就可以被替换的元素就称为替换元素（例如 &lt;img&gt;，&lt;input&gt; 登都是典型的替换元素）</p></blockquote><ol><li>内容外观不受页面上的 css 的影响。即样式表现在 css 之外</li><li>有自己的尺寸。默认的尺寸（不包括边框）是 300px*150px，像 &lt;video&gt; 等。也有如 &lt;img&gt; 这样替换元素为 0px 的。</li><li>在css属性上有一套自己的表现规则</li></ol><ul><li>&lt;select&gt;:首先内容可以替换，如果设置 <code>multiple</code> 属性，下拉就变成了展开直选多选的模式。并且样式外部的 css 很难更改。最后它也有自己的尺寸。</li></ul><blockquote><p>替换元素的默认 display</p></blockquote><ul><li>一般替换元素是内联元素（<code>inline</code>）或者是行内块元素（<code>inline-block</code>）</li></ul><blockquote><p>替换元素的尺寸</p></blockquote><ol><li>固有尺寸:替换内容原本的尺寸</li><li>HTML 尺寸，这些HTML原生的尺寸。例如 &lt;img&gt; 的 <code>width</code>、<code>height</code>、&lt;input&gt; 的 <code>size</code>、&lt;textarea&gt;的 <code>cols</code> 和 <code>rows</code></li><li>CSS 尺寸，通过 css 属性的 width 和 height 或者 max-width/min-width 和 max-height/min-height 设置尺寸</li></ol><ul><li>注意 <ul><li>如果固有尺寸含有固有的宽高比例，同时设置了宽度和高度，则元素依然按照固有的宽高比例</li><li>&lt;img&gt;中如果图片缺省，不需要使用<code>src=&quot;&quot;</code>，只要有<code>src=&quot;&quot;</code>就会产生请求</li></ul></li></ul><blockquote><p><code>object-fit</code>:替换内容的适配方式</p></blockquote><ol><li><code>fill</code>：默认值。也就是外部设定的尺寸多大，我就填满，跟着一样大</li><li><code>none</code>:图片的尺寸完全不受控制。会保持图片原来的大小。如果设置了大小，超过范围不会显示</li><li><code>contain</code>:保持图片比例，尽可能利用html的尺寸但是不会超出的显示方式</li></ol><ul><li>同时在伪元素中可以使用<code>content:attr()</code>获取html标签中的属性例如<code>attr(alt)</code>。url等也可以使用</li></ul><blockquote><p>content 元素与替换元素</p></blockquote><ul><li><code>content</code>属性生成的对象被称为匿名替换元素</li></ul><ol><li>使用 content 生成的文本是无法选中的，也是无法复制的。同时content生成的文本无法被屏幕设备阅读，搜索引擎抓取</li><li>不能左右<code>:empty</code>（当元素中没有内容时进行匹配）伪类</li><li>动态生成的值无法获取（自动累加，计数器）</li></ol><h4 id="content-内容生成" tabindex="-1">content 内容生成 <a class="header-anchor" href="#content-内容生成" aria-label="Permalink to &quot;content 内容生成&quot;">​</a></h4><blockquote><p>content 设置成空字符串，然后利用其他的 css 代码生成辅助元素，或实现图形，或实现特定布局。</p></blockquote><ol><li><p>content 中图片生成，直接使用 <code>content:url()</code> 不易控制图片。</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">div</span><span style="color:#89DDFF;">::</span><span style="color:#C792EA;">before</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">content</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">background</span><span style="color:#89DDFF;">:</span><span style="color:#82AAFF;">url</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div></li><li><p>attr属性值生成内容。除了原生的html属性。也可以使用自定义的html属性</p></li></ol><blockquote><p>content 计数器。两个属性 <code>counter-reset</code> 和 <code>counter-increment</code>。两个方法 <code>counter()</code> 和 <code>increment()</code></p></blockquote><ol><li><p><strong>counter-reset</strong>：计数器-重置，默认是从0开始，可以使用负数或者小数（各个浏览器不同）</p><ul><li>同时可以多个计数器同时命名</li></ul></li><li><p><strong>counter-increment</strong>：计数器递增。值为 <code>counter-reset</code> 的一个或者多个关键字，后面可以跟数字，表示每次计数的变化值</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">counter</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">counter-reset</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> cun </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">counter-increment</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> cun </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">counter</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">before</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">content</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">counter</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">cun</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">counter</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">counter</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div></li><li><p><code>counter()/counters()</code>:显示计数</p><ul><li><code>counter(name,style)</code>，其中style支持的参数就是 <code>list-style-type</code> 支持的参数</li><li><code>counters(name,string,style)</code>string参数是字符串，表示子序号的连接字符串 <ul><li>使用这个方法可以实现序列的嵌套。通过子辈对父辈的 <code>counter-reset</code> 重置，配合 counters() 方法</li></ul></li></ul></li></ol><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">reset</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">counter-reset</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> cun </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">counter</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">before</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">counter-increment</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> cun </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">content</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">counters</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">cun</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">.</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">reset</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">counter</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">reset</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">counter</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">大儿子</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">counter</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">二儿子</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">counter</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">三儿子</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">counter</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">王小三</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">reset</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">counter</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">大儿子</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">counter</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">二儿子</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">counter</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">三儿子</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><ul><li>由于一个容器的普照元素 <code>reset</code> 应该是固定的，一但子元素出现，其实就已经进入下一级嵌套</li></ul><h3 id="边框-border" tabindex="-1">边框(border) <a class="header-anchor" href="#边框-border" aria-label="Permalink to &quot;边框(border)&quot;">​</a></h3><ul><li><p>简写：<code>border:border-width || border-style || border-color</code>，没有顺序</p></li><li><p>分开写法：border-right/border-left/border-top/border-bottom</p></li><li><p>合并相邻边框 <code>border-collapse:collapse</code></p></li><li><p><span style="color:red;">注意:</span></p><ol><li>测量盒子大小的时候，不量边框</li><li>如果测量的时候包含了边框，则需要width/height减去边框宽度</li></ol></li></ul><h3 id="内边距-padding" tabindex="-1">内边距（padding） <a class="header-anchor" href="#内边距-padding" aria-label="Permalink to &quot;内边距（padding）&quot;">​</a></h3><blockquote><p>在使用 padding 时尽量不要使用 <code>box-sizing:border-box</code>。局部使用尽量使用无宽度以及宽度分离准则</p></blockquote><ul><li><strong>内联元素</strong>的 <em>padding</em> 依然会对垂直方向的元素有影响。不过内联元素没有可视化的宽高（<code>clientHight</code> 和 <code>clientWidth</code> 永远是 <code>0</code>） <ul><li>垂直方向的行为完全受 <code>line-height</code> 和 <code>vertical-align</code> 的影响</li><li>不过视觉上并不会改变上一行和下一行内容的间距（需要加上一些效果，例如 <code>background-color</code>）</li></ul></li></ul><blockquote><p>css 中出现这种层叠的现象</p></blockquote><ol><li>一类是纯视觉层叠，不影响外部尺寸。（例如 <code>relative</code> 元素的定位、<code>box-shadow</code> 以及 <code>outline</code> 等）</li><li>另一种会影响外部尺寸。例如 <code>padding</code></li></ol><ul><li><p>区分:给父级设置 <code>overflow:auto</code>，如果层叠区域超出父容器，没有出现滚动条，则是纯视觉的：如果出现滚动条，则会影响尺寸，影响布局</p></li><li><p>padding 属性用于设置内边距，即边框与内容之间的距离</p></li><li><p><span style="color:red;">注意:</span></p><ol><li>内容和边框有了距离，添加内边框</li><li>padding 影响盒子实际大小</li><li>如果盒子有了高度和宽度，此时指定内边框，会撑大盒子 <ul><li>解决方案: 让width/height 减去多出来的内边距大小</li></ul></li><li>如果盒子本身没有指定 width/height 属性，则此时 paddiong 不会撑开盒子大小</li></ol></li></ul><blockquote><p>padding的百分比值:<span style="color:red;">无论是水平方向还是垂直方向均是相对于宽度计算的</span></p></blockquote><ul><li>很多表单元素都会内置<code>padding</code><ul><li>内置padding的元素:&lt;input&gt;、&lt;textarea&gt;、&lt;button&gt;、&lt;select&gt;</li><li>单选框不内置、&lt;radio&gt;、&lt;checkbox&gt;</li></ul></li></ul><blockquote><p>使用padding回值双层圆点</p></blockquote><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">box</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> inline-block</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">padding</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">border</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10px</span><span style="color:#A6ACCD;"> solid</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">border-radius</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">50%</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">background-color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> black</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">background-clip</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> content-box</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="外边距-margin" tabindex="-1">外边距（margin） <a class="header-anchor" href="#外边距-margin" aria-label="Permalink to &quot;外边距（margin）&quot;">​</a></h3><blockquote><p>margin 对尺寸没有影响，只是元素是<span style="color:green;">充分利用可用空间</span>状态的时候。margin 才可以改变元素的可视尺寸</p></blockquote><ul><li>对于普通的块状元素，在默认的水平流下，margin 之所以能改变左右的内部尺寸，垂直方向无法改变（这是由 <code>margin:auto</code> 的计算规则决定的）</li></ul><blockquote><p>margin 的百分比值也是相对于宽度计算的</p></blockquote><ol><li>不过由于 margin 无法在垂直方向上改变元素自身的内部尺寸，往往需要父元素作为载体</li><li>并且由于 margin 合并的问题，垂直方向往往需要双倍尺寸</li></ol><blockquote><p>margin 属性</p></blockquote><ul><li>margin 属性用于设置外边距，用于控制盒子与盒子之间的距离</li></ul><blockquote><p>margin 合并</p></blockquote><ul><li>块级元素的上外边距 <code>margin-top</code> 和下外边距 <code>margin-bottom</code> 有时会合并采购和各位单个外边距</li></ul><ol><li>块级元素：但不包括浮动和绝对定位</li><li>只发生在垂直方向（不考虑 <code>writing-mode</code>）</li></ol><ul><li><p>margin 合并的场景</p><ol><li>相邻兄弟元素 margin 合并</li><li>父级和第一个/最后一个子元素（嵌套块元素垂直外边距的塌陷） <ul><li>对于两个嵌套关系（父子关系）的块元素，父元素有上外边距同时子元素也有上外边据，此时父元素会塌陷较大的外边距值</li><li>解决方案:</li></ul><ol><li>可以为父元素定义上边框</li><li>可以为父元素定义上内边框</li><li>设置格式化上下文，例如父元素添加 <code>overflow:hidden</code>（不会增加盒子的大小）</li></ol></li></ol></li><li><p>margin 合并的计算规则</p><ol><li>正正取大值</li><li>正负值相加</li><li>负负值最负值</li></ol></li><li><p>margin 负值的意义在于：在页面中任何地方嵌套或者直接放入任何裸 &lt;div&gt;，都不会影响原来的块状布局</p></li></ul><h4 id="margin-auto" tabindex="-1">margin:auto <a class="header-anchor" href="#margin-auto" aria-label="Permalink to &quot;margin:auto&quot;">​</a></h4><blockquote><p>有时候元素没有设置width或者height也会自动填充</p></blockquote><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- 自动填充 --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- 自动填充对应的方位 --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">div</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">position</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">absolute</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">left</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#B2CCD6;">right</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><blockquote><p>margin:auto 填充规则</p></blockquote><ol><li>如果一侧是定值，一侧是 auto，则 auto 为剩余空间大小</li><li>如果两侧均是 auto，则平分剩余空间大小</li></ol><ul><li>那就很容易实现右对齐，只要 margin-right 为 0 或者不设置</li></ul><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">son</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">width</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">200px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">margin-left</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">auto</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><ul><li>水平居中 <code>margin:0 auto</code> ，会让div布局水平居中在浏览器中</li><li><code>margin:auto</code> 不能垂直居中。由于这个属性有一个前提条件，当 width 或者 height 为 auto 时，元素是<span style="color:red;">具有对应方向的自动填充特性的</span>。根据 html 文档流是水平方向自适应的，所以设置垂直方向没用。如果父元素设置 flex，那么子元素会在垂直水平方向都有自适应的能力。</li></ul><blockquote><p>设置水平垂直居中（不适用 <code>writing-mode</code>）</p></blockquote><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">father</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">width</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">300px</span><span style="color:#89DDFF;">;</span><span style="color:#B2CCD6;">height</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">200px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">position</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">relative</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">son</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">position</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">absolute</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">top</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#B2CCD6;">right</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#B2CCD6;">bottom</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#B2CCD6;">left</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">width</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">150px</span><span style="color:#89DDFF;">;</span><span style="color:#B2CCD6;">height</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">100px</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="行内元素与流" tabindex="-1"><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Inline_elements" target="_blank" rel="noreferrer">行内元素</a>与流 <a class="header-anchor" href="#行内元素与流" aria-label="Permalink to &quot;[行内元素](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Inline_elements)与流&quot;">​</a></h2><ul><li><code>line-height</code> 行高的定义就是两基线的间距，<code>vertical-align</code> 的默认值就是基线</li></ul><blockquote><p>字母x与css中的x-height</p></blockquote><p><img src="`+p+`" alt="baseline"></p><ul><li><code>x-height</code>：就是指小写字母 <code>x</code> 的高度，术语描述就是基线和等分线之间的距离 <ul><li><code>ascender height</code>：上下线高度</li><li><code>cap height</code>：大写字母高度</li><li><code>median</code>：中线</li><li><code>descender height</code>：下行线的高度</li></ul></li><li>不过<code>vertical-align:middle</code>这里的等分线和上面 <code>median</code>（中线）不是一个意思。这里的 middle 是指 x 交叉点的那个位置</li></ul><blockquote><p><code>line-height</code>：对于纯内联元素，<code>line-height</code>就是高度计算的基石</p></blockquote><ul><li>例如 <code>line-height</code> 设为 16px，则一行文字高度就是 16px，两行就是 32px</li></ul><blockquote><p>内联元素垂直居中（<code>line-height</code>）</p></blockquote><ul><li>直接设置 <code>line-height</code> 的大小就可以使内联元素近似垂直居中，而不需要设置 <code>line-height=height</code></li><li>多行文本或者替换元素的垂直居中实现原理和单行文本就不一样，需要设置 <code>vertical-align</code> 属性</li></ul><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">box</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">line-height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">120px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">background-color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">red</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">content</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">inline-block</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">line-height</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">20px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">margin</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">20px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">vertical-align</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">middle</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">box</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">content</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">基于高实现的....</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><ol><li>多行文本使用一个标签包裹，然后设置 display 为 <code>inline-block</code><ul><li>在设置 <code>line-height:120px</code> 相当于在 <code>.content</code> 元素前撑起了一个高度为 120px，宽度为 0 的空白节点</li></ul></li><li>因为内联元素默认使基线对齐的，所以当使用 <code>.content</code> 元素设置 <code>vertical-align:middle;</code> 来调整多行文本的垂直位置，从而实现.</li></ol><h3 id="line-height" tabindex="-1">line-height <a class="header-anchor" href="#line-height" aria-label="Permalink to &quot;line-height&quot;">​</a></h3><blockquote><p>不同字体的 <code>line-height:normal</code> 也不同</p></blockquote><ol><li>数值，例如 <code>line-height:1.5</code>，其最终的计算值是和当前 <code>font-size</code> 相乘后的值</li><li>百分比值，如 <code>line-height:150%</code>，其最终的计算值是和当前 <code>font-size</code> 相乘后的值</li><li>长度值，带单位的值，例如 <code>line-height:21px</code> 或者 <code>line-height:1.5em</code><ul><li>不过由于 em 是相对于 <code>font-size</code> 的单位。假设 <code>font-size:14px</code>。那么 <code>line-height:21px</code></li></ul></li></ol><ul><li>注意:如果使用数值作为 <code>line-height</code> 的属性值，那么子元素则是继承 <code>line-height</code> 这个属性的数值。例如 1.5，会和子元素的 <code>font-size</code> 展开计算得到行高；但是百分比值或者长度则是提前在父元素中利用 <code>font-size</code> 计算得出子元素的行高，然后子元素继承</li><li>一般使用数值会有更好的排版效果</li></ul><blockquote><p><code>line-height</code> 对于单行纯文本元素配合 height 可以实现居中，但是遇到替换元素或者多行纯文本元素就不行</p></blockquote><ul><li>替换元素的高度不受 line-height 影响，并且<code>vertical-align</code>属性会影响到替换元素</li></ul><blockquote><p>内联元素的大值特性</p></blockquote><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">parent</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">span</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">child</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">绿色</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">span</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">parent</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">line-height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">20px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">child</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">line-height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">96px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/* 或者这样设置 */</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">parent</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">line-height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">96px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">son</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">line-height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">20px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><ul><li><p>其实无论内联元素的 <code>line-height</code> 如何设置，最终的父级元素都是由数值最大的那个 <code>line-height</code> 决定的。</p></li><li><p>这里的&lt;span&gt;是一个内联元素，因此自身是一个<strong>内联盒子</strong>，本例就这一个内联盒子，只要有一个<strong>内联盒子</strong>，就一定会有<strong>行宽盒子</strong>，就是每一行内联元素外面包裹一层看不见的盒子</p><ul><li>并且这个<strong>行宽盒子</strong>前面有一个宽度为0的具有该元素的字体和行高属性都看不见的<strong>幽灵空白节点</strong></li><li>实际上</li></ul><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">parent</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  字符</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">span</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">child</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">绿色</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">span</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div></li><li><p>当 <code>.parent</code> 设置 <code>line-height:96px</code> 很容易理解。如果 <code>.son</code> 的 line-height 设置 <code>96px</code>，<span style="background:red;">行宽盒子的高度是由高度最高的<strong>内联盒子</strong>决定的</span>，所以 <code>.parent</code> 的高度永远是最大的那个 <code>line-height</code></p></li></ul><h3 id="vertical-align" tabindex="-1">vertical-align <a class="header-anchor" href="#vertical-align" aria-label="Permalink to &quot;vertical-align&quot;">​</a></h3><blockquote><p>vertical-align起作用的前提条件就是，只能应用于内联元素（inline、inline-block、inline-table）以及 table 值为 table-ceil</p></blockquote><ul><li>因此在默认情况下。可以使用于&lt;img&gt;、&lt;button&gt;、&lt;input&gt;等替换元素，或者&lt;span&gt;、&lt;strong&gt;、&lt;em&gt;等内联元素</li></ul><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">box</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">height</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">128px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">/* 关键css属性, */</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">line-height</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">128px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">box</span><span style="color:#89DDFF;">&gt;</span><span style="color:#FFCB6B;">img</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">height</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">96px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">vertical-align</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">middle</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">box</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">img</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1.jpg</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><ul><li>这种情况下 <code>line-height</code> 使<em>幽灵空白节点</em>的高度足够。才会使 <code>vertical-align:middle</code> 起作用</li></ul><ol><li><p>线类:<code>vertical-align:baseline | top | middle | bottom</code>，默认值 baseline</p><table><thead><tr><th>值</th><th>描述</th></tr></thead><tbody><tr><td>baseline</td><td>默认。元素放在父元素的基线上</td></tr><tr><td>top</td><td>把元素的上边缘或行中最高元素的上边缘对齐</td></tr><tr><td>middle</td><td>把此元素放置在父元素的中部</td></tr><tr><td>bottom</td><td>把元素的下边缘与行中最低元素的下边缘对齐</td></tr></tbody></table></li><li><p>文本类：<code>vertical-align:text-top | text-bottom</code></p></li><li><p>上标下标：<code>vertical-align:sub | super</code></p><ul><li><code>super</code>：提高盒子的基线到父级合适的下标基线位置。对标 &lt;sup&gt; 标签</li><li><code>sub</code>：降低盒子的基线到父级合适的下标基线位置。对标 &lt;sub&gt; 标签</li></ul></li><li><p>数值百分比：<code>vertical-alig:20px | 2em |20%</code></p><ul><li>如果 vertical-align 的计算值是正值，往下偏移，如果是正值，往上偏移。</li><li>并且数值的大小相对于基线位置。例如 <code>vertical-align:0</code>--&gt;<code>vertical-align:basline</code></li></ul></li></ol><ul><li><p><code>vertical-align</code> 的百分比是相对于 <code>line-height</code> 计算的</p></li><li><p><span style="color:red;">当设置浮动或者绝对定位之后，该元素会被块状化，这时候再使用 <code>vertical-align</code> 不起作用</span></p></li></ul><blockquote><p>内联元素由于幽灵空白节点，line-height，vertical-align 会产生很多 bug（例如图片在块状盒子中会有间隙）</p></blockquote><ol><li>图片块状化</li><li>容器 <code>line-height</code> 足够小。只要半行间距小到，小到没有行间距。例如 <code>line-height=0</code></li><li>容器 <code>font-size</code> 足够小。不过此方法想要生效，需要容器的 <code>line-height</code> 和 <code>font-size</code> 相关，例如数值或者百分比，否则只会让间隙更大</li><li>图片设置 <code>vertical-align</code> 属性，间隙产生的原因就是基线对齐问题，<code>vertical-align</code> 设置为 top，bottom 等值</li></ol><h4 id="深入理解vertical-align线类属性值" tabindex="-1">深入理解vertical-align线类属性值 <a class="header-anchor" href="#深入理解vertical-align线类属性值" aria-label="Permalink to &quot;深入理解vertical-align线类属性值&quot;">​</a></h4><blockquote><ul><li>文本制类的内联元素，<code>vertical-align</code> 的 <code>baseline</code> 属性值就是字符x的下边缘。对于替换元素则是替换元素的下边缘</li><li>如果是 <code>inline-block</code>，则规则要复杂，如果里面没有内联元素，或者 overflow 不是 visible，则该元素的基线就是其 margin 底边缘；否则基线就是元素里面最后一行的内联元素的基线</li></ul></blockquote><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">dib</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">inline-block</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">150px</span><span style="color:#89DDFF;">;</span><span style="color:#B2CCD6;">height</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">150px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">border</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">1px</span><span style="color:#A6ACCD;"> solid </span><span style="color:#89DDFF;">#</span><span style="color:#A6ACCD;">cad5eb</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">background-color</span><span style="color:#89DDFF;">:#</span><span style="color:#A6ACCD;">f0f3f9</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">span</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">dib</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">span</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">span</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">dib</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">x-baseline</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">span</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><ul><li>由于第一个框里没有内联元素，因此 <code>baseline</code> 就是容器 margin 的下边缘。而第二个边框有字符，是纯正的内联元素，因此第二个边框的 <code>baseline</code> 也就是这些字母的基线，也就是 x 的下边缘。</li></ul><blockquote><p>了解 <code>vertical-align:top/tottom</code></p></blockquote><ul><li><code>vertical-align:top</code>：垂直上边缘对齐，如果是内联元素，则和这一行位置最高的内联元素的顶部对齐。bottom 只是把顶部换成了底部</li></ul><blockquote><p><code>vertical-align:middle</code> 和近似垂直居中</p></blockquote><ul><li><strong>内联元素</strong>：元素的垂直中心点和行宽盒子基线往上 1/2 <code>x-height</code> 处对齐 <ul><li>所以它真正意义上的垂直中心是垂直中心位置和x的交叉点对齐</li><li><img src="`+t+'" alt=" "></li><li>红色的线是图片中心的线，绿色的容器垂直中心的线。而随着 <code>font-size</code> 的增大，图片的中心位置会继续向下偏移，通常可以设置 <code>font-size:0</code> .这样两条线几乎就对齐了</li></ul></li></ul><blockquote><p>父级内容区域是指在父级元素当前 <code>font-size</code> 和 <code>font-family</code> 下应有的内容区域设置大小</p></blockquote><ul><li>假设元素后面有一个和父元素 <code>font-size</code>，<code>font-family</code> 一模一样的文字内容，则 <code>vertical-align:text-top</code> 表示元素和这个文字的内容区域的上边缘对齐</li><li><img src="'+c+`" alt=" "></li></ul><h2 id="显示与隐藏" tabindex="-1">显示与隐藏 <a class="header-anchor" href="#显示与隐藏" aria-label="Permalink to &quot;显示与隐藏&quot;">​</a></h2><ol><li><p>如果希望元素不可见，同时不占据空间，辅助设备无法访问，但资源油价在，DOM可以访问</p><ul><li><code>display:none</code>隐藏</li></ul></li><li><p>如果希望元素不可见，不能点击，辅助设备无法访问，但占据空间保留</p><ul><li><code>visibility:hidden</code></li></ul></li><li><p>希望元素不可见，不能点击，不占据空间，但键盘可访问</p><ul><li>clip 裁剪隐藏</li></ul></li><li><p>希望元素不可见，不能点击，但占据空间，且键盘可访问</p><ul><li><code>position:relative</code> 或者使用 <code>z-index</code></li></ul></li><li><p>如果希望元素不可见，但可以点击，且不占据空间，则可以使用透明度</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">opacity</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">position</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">absolute</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">opacity</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">filter</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">Alpha(opacity=</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div></li><li><p>如果希望元素不可见，可以点击，但是不占据空间，则直接使透明度为0</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">opacity</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">opacity</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">filter</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">Alpha(opacity=</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div></li></ol><h3 id="display" tabindex="-1">display <a class="header-anchor" href="#display" aria-label="Permalink to &quot;display&quot;">​</a></h3><ul><li><code>display:none</code> 隐藏对象，<span style="color:red;">不再占有原来的位置，且不能点击</span></li><li><code>display:block</code> 除了转换为块级元素之外，同时还有显示元素的意思</li></ul><blockquote><p>html5 中增加了 <code>hidden</code> 属性，使元素天生就可以隐藏（display:none）</p></blockquote><ul><li><code>&lt;div hidden&gt;不可见&lt;/div&gt;</code></li></ul><h3 id="visibility-可见性" tabindex="-1">visibility 可见性 <a class="header-anchor" href="#visibility-可见性" aria-label="Permalink to &quot;visibility 可见性&quot;">​</a></h3><blockquote><p><code>display:none</code> 隐藏的元素不占据任何空间，而 <code>visibility:hideen</code> 占据的空间依然保留</p></blockquote><ul><li><code>visibility:visible</code>元素可见</li></ul><blockquote><p><strong>visibility 的继承性</strong></p></blockquote><ul><li>父元素设置 <code>visibility:hideen</code>，由于子元素会继承父元素的 <code>visibility:hideen</code>，子元素也会看不见</li><li>如果子元素设置了 <code>visibility:visible</code>，子元素会再次显示出来</li></ul><h3 id="overflow-溢出" tabindex="-1">overflow 溢出 <a class="header-anchor" href="#overflow-溢出" aria-label="Permalink to &quot;overflow 溢出&quot;">​</a></h3><blockquote><p><code>overflow-x</code> 和 <code>overflow-y</code> 分别表示单独控制水平或者垂直方向的裁剪规则。当两个值除非都设置为 <code>visible</code>，否则 visible 都会被当作 auto 来解析。也就是永远不能设置为一个方向溢出裁剪或者滚动，另一方向溢出显示的效果</p></blockquote><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">html</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">overflow-x</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">hidden</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">overflow-y</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">auto</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">/*多余的*/</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><ul><li><code>overflow:visible</code>，默认值，显示可见</li><li><code>overflow:hidden</code>，裁剪溢出</li><li><code>overflow:scroll</code>，不管有没有溢出都显示滚动条</li><li><code>overflow:auto</code>，有溢出，才显示滚动条</li></ul><blockquote><p>overflow与滚动条</p></blockquote><ul><li>html中只有两个标签产生滚动条，&lt;html&gt; 和 &lt;textarea&gt;，因为他们的属性值默认是auto</li></ul><h2 id="其他" tabindex="-1">其他 <a class="header-anchor" href="#其他" aria-label="Permalink to &quot;其他&quot;">​</a></h2><h3 id="表单轮廓线" tabindex="-1">表单轮廓线 <a class="header-anchor" href="#表单轮廓线" aria-label="Permalink to &quot;表单轮廓线&quot;">​</a></h3><blockquote><p><code>outline</code>：元素的轮廓线，语法和 border 属性类似，分宽度，类型和颜色</p></blockquote><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">outline</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">outline</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">1px</span><span style="color:#A6ACCD;"> solid </span><span style="color:#89DDFF;">#</span><span style="color:#A6ACCD;">000</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><ul><li><p>不能再全局设置 <code>{outline:0 none}</code>，直接设置全局的的链接，按钮，输入框等元素都会消失</p></li><li><p><code>input{outline:none;}</code>，取消表单轮廓线</p></li><li><p>padding 元素值会在足够大，且祖先元素的 overflow 不是 visible 时出现滚动条，从而占据空间</p></li><li><p>然而 <code>outline</code> 不会占据任何空间，即使轮廓线宽度设置的再宽广</p></li></ul><blockquote><p><code>textarea{resize:none;}</code>，防止拖拽文本域</p></blockquote><h3 id="css3-盒子模型-box-sizing" tabindex="-1">CSS3 盒子模型（box-sizing） <a class="header-anchor" href="#css3-盒子模型-box-sizing" aria-label="Permalink to &quot;CSS3 盒子模型（box-sizing）&quot;">​</a></h3><ol><li><code>box-sizing:content-box</code> 盒子大小为 width+padding+border（默认的）</li><li><code>box-sizing:border-box</code> 盒子默认大小是 width</li></ol><ul><li>如果盒子模型改为 <code>box-sizing:border-box</code>，那么padding和border就不会撑大盒子（前提 padding 和 border 不会超过 width 的宽度）</li></ul><h2 id="流向的改变" tabindex="-1">流向的改变 <a class="header-anchor" href="#流向的改变" aria-label="Permalink to &quot;流向的改变&quot;">​</a></h2><ul><li><p><code>direction</code> 的默认值:<code>ltr</code>，其实就是 left-to-rifht。从左往右。<code>rtl</code> 其实就是 <code>right-to-left</code>，从右往左</p></li><li><p><code>writing-mode</code>：默认值是 <code>horizontal-tb</code> 表示文本流是水平（horizontal）的，元素是从上往下的（top-bottom）</p><ul><li><code>vertical-rl</code> 表示文本是垂直方向展示，阅读方向是从右往左的</li></ul></li><li><p><a href="./css逻辑属性.html#使用场景">详细请见</a></p></li></ul>`,166),y=[i,D,F];function d(C,h,u,A,g,b){return e(),o("div",null,y)}const k=n(r,[["render",d]]);export{q as __pageData,k as default};
